<?xml version="1.0" encoding="UTF-8"?>
<exbgf:sequence xmlns:bgf="http://planet-sl.org/bgf" xmlns:xbgf="http://planet-sl.org/xbgf" xmlns:exbgf="http://planet-sl.org/exbgf">
	<!-- ISSUE EXTEND
   - Fail: Creator.
      - [], ,([n(QualifiedIdentifier), ;([n(ArrayCreatorRest), n(ClassCreatorRest)])])
     vs.
      - [], ,([?(n(NonWildcardTypeArguments)), n(CreatedName), ;([n(ArrayCreatorRest), n(ClassCreatorRest)])])
      
CreatedName:
        Identifier NonWildcardTypeArguments ? ( ( "." Identifier NonWildcardTypeArguments ? ))*
  -->
	<xbgf:unfold>
		<nonterminal>QualifiedIdentifier</nonterminal>
		<in>
			<nonterminal>Creator</nonterminal>
		</in>
	</xbgf:unfold>
	<!-- RELAXATION -->
	<xbgf:disappear>
		<bgf:production>
			<nonterminal>Creator</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<star>
									<bgf:expression>
										<sequence>
											<bgf:expression>
												<terminal>.</terminal>
											</bgf:expression>
											<bgf:expression>
												<nonterminal>Identifier</nonterminal>
											</bgf:expression>
										</sequence>
									</bgf:expression>
								</star>
							</bgf:expression>
						</marked>
					</bgf:expression>
					<bgf:expression>
						<choice>
							<bgf:expression>
								<nonterminal>ArrayCreatorRest</nonterminal>
							</bgf:expression>
							<bgf:expression>
								<nonterminal>ClassCreatorRest</nonterminal>
							</bgf:expression>
						</choice>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:disappear>
	<!-- EXTENSION -->
	<xbgf:appear>
		<bgf:production>
			<nonterminal>Creator</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<optional>
									<bgf:expression>
										<nonterminal>NonWildcardTypeArguments</nonterminal>
									</bgf:expression>
								</optional>
							</bgf:expression>
						</marked>
					</bgf:expression>
					<bgf:expression>
						<choice>
							<bgf:expression>
								<nonterminal>ArrayCreatorRest</nonterminal>
							</bgf:expression>
							<bgf:expression>
								<nonterminal>ClassCreatorRest</nonterminal>
							</bgf:expression>
						</choice>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:appear>
	<xbgf:extract>
		<bgf:production>
			<nonterminal>CreatedName</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>NonWildcardTypeArguments</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:extract>
	<!-- EXTENSION -->
	<xbgf:appear>
		<bgf:production>
			<nonterminal>CreatedName</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>NonWildcardTypeArguments</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<star>
									<bgf:expression>
										<sequence>
											<bgf:expression>
												<terminal>.</terminal>
											</bgf:expression>
											<bgf:expression>
												<nonterminal>Identifier</nonterminal>
											</bgf:expression>
											<bgf:expression>
												<optional>
													<bgf:expression>
														<nonterminal>NonWildcardTypeArguments</nonterminal>
													</bgf:expression>
												</optional>
											</bgf:expression>
										</sequence>
									</bgf:expression>
								</star>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:appear>
	<!-- EXTENSION -->
	<xbgf:appear>
		<bgf:production>
			<nonterminal>Creator</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<optional>
									<bgf:expression>
										<nonterminal>NonWildcardTypeArguments</nonterminal>
									</bgf:expression>
								</optional>
							</bgf:expression>
						</marked>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>CreatedName</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<choice>
							<bgf:expression>
								<nonterminal>ArrayCreatorRest</nonterminal>
							</bgf:expression>
							<bgf:expression>
								<nonterminal>ClassCreatorRest</nonterminal>
							</bgf:expression>
						</choice>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:appear>
	<!-- ISSUE EXTEND
   - Fail: Primary.
      - [], ,([n(QualifiedIdentifier), ?(n(IdentifierSuffix))])
     vs.
      - [], ,([n(Identifier), *(,([t(.), n(Identifier)])), ?(n(IdentifierSuffix))])
      - [], ,([n(NonWildcardTypeArguments), ;([n(ExplicitGenericInvocationSuffix), ,([t(this), n(Arguments)])])])
  -->
	<xbgf:unfold>
		<nonterminal>QualifiedIdentifier</nonterminal>
		<in>
			<nonterminal>Primary</nonterminal>
		</in>
	</xbgf:unfold>
	<!-- EXTENSION -->
	<exbgf:addV>
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>NonWildcardTypeArguments</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<choice>
							<bgf:expression>
								<nonterminal>ExplicitGenericInvocationSuffix</nonterminal>
							</bgf:expression>
							<bgf:expression>
								<sequence>
									<bgf:expression>
										<terminal>this</terminal>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>Arguments</nonterminal>
									</bgf:expression>
								</sequence>
							</bgf:expression>
						</choice>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</exbgf:addV>
	<!--
   - Fail: Expression3.
      - [], ,([t((), n(Type), t()), n(Expression3)])
      - [], ,([n(ParExpression), n(Expression3)])
      - [], ,([t(!), n(Expression3)])
      - [], ,([t(~), n(Expression3)])
      - [], ,([n(Primary), *(n(Selector)), *(;([t(++), t(- -)]))])
      - [], ,([t(-), n(Expression3)])
      - [], ,([t(+), n(Expression3)])
      - [], ,([t(- -), n(Expression3)])
      - [], ,([t(++), n(Expression3)])
     vs.
      - [], ,([;([n(Primary), n(QualifiedIdentifier)]), *(n(PostfixOp))])
      - [], ,([t((), ;([n(Expression), n(Type)]), t()), n(Expression3)])
      - [], ,([n(PrefixOp), n(Expression3)])
  -->
	<exbgf:atomicV>
		<context>Expression3</context>
		<exbgf:factor-out>
			<start/>
			<choice>
				<bgf:expression>
					<terminal>++</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>--</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>+</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>~</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>!</terminal>
				</bgf:expression>
			</choice>
			<tail>
				<bgf:expression>
					<nonterminal>Expression3</nonterminal>
				</bgf:expression>
			</tail>
		</exbgf:factor-out>
		<exbgf:extractC>
			<bgf:production>
				<nonterminal>PrefixOp</nonterminal>
				<bgf:expression>
					<choice>
						<bgf:expression>
							<terminal>++</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>--</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>+</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>-</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>~</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>!</terminal>
						</bgf:expression>
					</choice>
				</bgf:expression>
			</bgf:production>
		</exbgf:extractC>
		<exbgf:extractC>
			<bgf:production>
				<nonterminal>PostfixOp</nonterminal>
				<bgf:expression>
					<choice>
						<bgf:expression>
							<terminal>++</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>--</terminal>
						</bgf:expression>
					</choice>
				</bgf:expression>
			</bgf:production>
			<in>
				<nonterminal>Expression3</nonterminal>
			</in>
		</exbgf:extractC>
	</exbgf:atomicV>
	<!-- ISSUE PERMISSIVENESS
  - Fail: Expression3.
      - [], ,([n(Primary), *(n(Selector)), *(n(PostfixOp))])
     vs.
      - [], ,([;([n(Primary), n(QualifiedIdentifier)]), *(n(PostfixOp))])
  -->
	<!-- RELAXATION -->
	<xbgf:disappear>
		<bgf:production>
			<nonterminal>Expression3</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>Primary</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<star>
									<bgf:expression>
										<nonterminal>Selector</nonterminal>
									</bgf:expression>
								</star>
							</bgf:expression>
						</marked>
					</bgf:expression>
					<bgf:expression>
						<star>
							<bgf:expression>
								<nonterminal>PostfixOp</nonterminal>
							</bgf:expression>
						</star>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:disappear>
	<xbgf:eliminate>
		<nonterminal>Selector</nonterminal>
	</xbgf:eliminate>
	<!-- EXTENSION -->
	<exbgf:addH>
		<bgf:production>
			<nonterminal>Expression3</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<choice>
							<bgf:expression>
								<marked>
									<bgf:expression>
										<nonterminal>QualifiedIdentifier</nonterminal>
									</bgf:expression>
								</marked>
							</bgf:expression>
							<bgf:expression>
								<nonterminal>Primary</nonterminal>
							</bgf:expression>
						</choice>
					</bgf:expression>
					<bgf:expression>
						<star>
							<bgf:expression>
								<nonterminal>PostfixOp</nonterminal>
							</bgf:expression>
						</star>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</exbgf:addH>
	<!--
   - Fail: Expression3.
      - [], ,([t((), n(Type), t()), n(Expression3)])
      - [], ,([n(ParExpression), n(Expression3)])
     vs.
      - [], ,([t((), ;([n(Expression), n(Type)]), t()), n(Expression3)])
  -->
	<xbgf:unfold>
		<nonterminal>ParExpression</nonterminal>
		<in>
			<nonterminal>Expression3</nonterminal>
		</in>
	</xbgf:unfold>
	<exbgf:atomicV>
		<context>Expression3</context>
		<exbgf:factor-out>
			<start>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
			</start>
			<choice>
				<bgf:expression>
					<nonterminal>Type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>Expression</nonterminal>
				</bgf:expression>
			</choice>
			<tail>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>Expression3</nonterminal>
				</bgf:expression>
			</tail>
		</exbgf:factor-out>
	</exbgf:atomicV>
</exbgf:sequence>
