<?xml version="1.0" encoding="UTF-8"?>
<exbgf:sequence xmlns:bgf="http://planet-sl.org/bgf" xmlns:xbgf="http://planet-sl.org/xbgf" xmlns:exbgf="http://planet-sl.org/exbgf">
	<!-- ISSUE EXTEND
  annotated declarations -->
	<xbgf:introduce>
		<bgf:production>
			<nonterminal>DefaultValue</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>default</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>ElementValue</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:introduce>
	<xbgf:introduce>
		<bgf:production>
			<nonterminal>AnnotationMethodRest</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>(</terminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>)</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>BracketsOpt</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>DefaultValue</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:introduce>
	<xbgf:introduce>
		<bgf:production>
			<nonterminal>AnnotationConstantRest</nonterminal>
			<bgf:expression>
				<nonterminal>VariableDeclarators</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:introduce>
	<xbgf:introduce>
		<bgf:production>
			<nonterminal>AnnotationMethodOrConstantRest</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>AnnotationMethodRest</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>AnnotationMethodOrConstantRest</nonterminal>
			<bgf:expression>
				<nonterminal>AnnotationConstantRest</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:introduce>
	<exbgf:introduceH>
		<bgf:production>
			<nonterminal>AnnotationTypeElementRest</nonterminal>
			<bgf:expression>
				<choice>
					<bgf:expression>
						<sequence>
							<bgf:expression>
								<nonterminal>Type</nonterminal>
							</bgf:expression>
							<bgf:expression>
								<nonterminal>AnnotationMethodOrConstantRest</nonterminal>
							</bgf:expression>
							<bgf:expression>
								<terminal>;</terminal>
							</bgf:expression>
						</sequence>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>ClassDeclaration</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>InterfaceDeclaration</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>EnumDeclaration</nonterminal>
					</bgf:expression>
				</choice>
			</bgf:expression>
		</bgf:production>
	</exbgf:introduceH>
	<xbgf:introduce>
		<bgf:production>
			<nonterminal>AnnotationTypeElementDeclaration</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>ModifiersOpt</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>AnnotationTypeElementRest</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:introduce>
	<xbgf:introduce>
		<bgf:production>
			<nonterminal>AnnotationTypeElementDeclarations</nonterminal>
			<bgf:expression>
				<nonterminal>AnnotationTypeElementDeclaration</nonterminal>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>AnnotationTypeElementDeclarations</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>AnnotationTypeElementDeclarations</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>AnnotationTypeElementDeclaration</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:introduce>
	<xbgf:introduce>
		<bgf:production>
			<nonterminal>AnnotationTypeBody</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>{</terminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>AnnotationTypeElementDeclarations</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>}</terminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:introduce>
	<xbgf:introduce>
		<bgf:production>
			<nonterminal>AnnotationTypeDeclaration</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>@</terminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>interface</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>AnnotationTypeBody</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:introduce>
	<!-- EXTENSION -->
	<exbgf:chainX>
		<from>InterfaceDeclaration</from>
		<to>NormalInterfaceDeclaration</to>
		<to>AnnotationTypeDeclaration</to>
	</exbgf:chainX>
	

	<!-- EXTENSION -->
	<exbgf:addV>
		<bgf:production>
			<nonterminal>AnnotationTypeElementRest</nonterminal>
			<bgf:expression>
				<nonterminal>AnnotationTypeDeclaration</nonterminal>
			</bgf:expression>
		</bgf:production>
	</exbgf:addV>
	<!-- ISSUE EXTEND
   - Fail: NormalInterfaceDeclaration.
      - [], ,([t(interface), n(Identifier),                       ?(,([t(extends), n(TypeList)])), n(InterfaceBody)])
     vs.
      - [], ,([t(interface), n(Identifier), ?(n(TypeParameters)), ?(,([t(extends), n(TypeList)])), n(InterfaceBody)])
  -->
	<!-- EXTENSION -->
	<xbgf:appear>
		<bgf:production>
			<nonterminal>NormalInterfaceDeclaration</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>interface</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<optional>
									<bgf:expression>
										<nonterminal>TypeParameters</nonterminal>
									</bgf:expression>
								</optional>
							</bgf:expression>
						</marked>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<sequence>
									<bgf:expression>
										<terminal>extends</terminal>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>TypeList</nonterminal>
									</bgf:expression>
								</sequence>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>InterfaceBody</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:appear>
	<!-- ISSUE EXTEND
   - Fail: InterfaceBodyDeclaration.
     vs.
      - [], ,([n(ModifiersOpt), n(TypeParameters), t(void), n(Identifier), t((), ?(n(FormalParameterDecls)), t()), n(BracketsOpt), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
      - [], ,([n(ModifiersOpt), n(TypeParameters), n(Type), n(Identifier), t((), ?(n(FormalParameterDecls)), t()), n(BracketsOpt), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
  -->
	<exbgf:addV>
		<!-- EXTENSION -->
		<bgf:production>
			<nonterminal>InterfaceBodyDeclaration</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>ModifiersOpt</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>TypeParameters</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Type</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>(</terminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>FormalParameterDecls</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>)</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>BracketsOpt</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<sequence>
									<bgf:expression>
										<terminal>throws</terminal>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>QualifiedIdentifierList</nonterminal>
									</bgf:expression>
								</sequence>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>;</terminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<!-- EXTENSION -->
		<bgf:production>
			<nonterminal>InterfaceBodyDeclaration</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>ModifiersOpt</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>TypeParameters</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>void</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>(</terminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>FormalParameterDecls</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>)</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>BracketsOpt</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<sequence>
									<bgf:expression>
										<terminal>throws</terminal>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>QualifiedIdentifierList</nonterminal>
									</bgf:expression>
								</sequence>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>;</terminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</exbgf:addV>
	<!--
   - Fail: InterfaceBodyDeclaration.
      - [], ,([n(ModifiersOpt), n(InterfaceMemberDecl)])
     vs.
      - [], ,([n(ModifiersOpt), n(ClassDeclaration)])
      - [], ,([n(ModifiersOpt), n(InterfaceDeclaration)])
      - [], ,([n(ModifiersOpt), t(void), n(Identifier), t((), ?(n(FormalParameterDecls)), t()), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
      - [], ,([n(ModifiersOpt), n(TypeParameters), t(void), n(Identifier), t((), ?(n(FormalParameterDecls)), t()), n(BracketsOpt), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
      - [], ,([n(ModifiersOpt), n(TypeParameters), n(Type), n(Identifier), t((), ?(n(FormalParameterDecls)), t()), n(BracketsOpt), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
      - [], ,([n(ModifiersOpt), n(Type), n(Identifier), t((), ?(n(FormalParameterDecls)), t()), n(BracketsOpt), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
      - [], ,([n(ModifiersOpt), n(Type), n(Identifier), n(ConstantDeclaratorRest), *(,([t((,)), n(ConstantDeclarator)])), t((;))])
  -->
	<exbgf:inlineV>InterfaceMemberDecl</exbgf:inlineV>
	<xbgf:inline>InterfaceMethodOrFieldDecl</xbgf:inline>
	<xbgf:inline>VoidInterfaceMethodDeclaratorRest</xbgf:inline>
	<exbgf:inlineV>InterfaceMethodOrFieldRest</exbgf:inlineV>
	<xbgf:inline>InterfaceMethodDeclaratorRest</xbgf:inline>
	<xbgf:inline>ConstantDeclaratorsRest</xbgf:inline>
	<exbgf:distributeH>InterfaceBodyDeclaration</exbgf:distributeH>
	<!--
   - Fail: InterfaceBodyDeclaration.
      - [], ,([n(ModifiersOpt), t(void), n(Identifier), t((), ?(,([n(FormalParameter), *(,([t((,)), n(FormalParameter)]))])), t()), n(BracketsOpt), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
     vs.
      - [], ,([n(ModifiersOpt), t(void), n(Identifier), t((), ?(n(FormalParameterDecls)), t()), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
  -->
	<!-- GENERALITY -->
	<!-- EXTENSION -->
	<xbgf:replace>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>FormalParameter</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<star>
						<bgf:expression>
							<sequence>
								<bgf:expression>
									<terminal>,</terminal>
								</bgf:expression>
								<bgf:expression>
									<nonterminal>FormalParameter</nonterminal>
								</bgf:expression>
							</sequence>
						</bgf:expression>
					</star>
				</bgf:expression>
			</sequence>
		</bgf:expression>
		<bgf:expression>
			<nonterminal>FormalParameterDecls</nonterminal>
		</bgf:expression>
	</xbgf:replace>
	<xbgf:unfold>
		<nonterminal>BracketsOpt</nonterminal>
		<in>
			<nonterminal>InterfaceBodyDeclaration</nonterminal>
		</in>
	</xbgf:unfold>
	<!-- EXTENSION -->
	<xbgf:disappear>
		<bgf:production>
			<nonterminal>InterfaceBodyDeclaration</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>ModifiersOpt</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>void</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>(</terminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>FormalParameterDecls</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>)</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<star>
									<bgf:expression>
										<sequence>
											<bgf:expression>
												<terminal>[</terminal>
											</bgf:expression>
											<bgf:expression>
												<terminal>]</terminal>
											</bgf:expression>
										</sequence>
									</bgf:expression>
								</star>
							</bgf:expression>
						</marked>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<sequence>
									<bgf:expression>
										<terminal>throws</terminal>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>QualifiedIdentifierList</nonterminal>
									</bgf:expression>
								</sequence>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>;</terminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:disappear>
	<xbgf:fold>
		<nonterminal>BracketsOpt</nonterminal>
		<in>
			<nonterminal>InterfaceBodyDeclaration</nonterminal>
		</in>
	</xbgf:fold>
</exbgf:sequence>
