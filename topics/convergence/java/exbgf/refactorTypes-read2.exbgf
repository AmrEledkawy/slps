<?xml version="1.0" encoding="UTF-8"?>
<exbgf:sequence xmlns:bgf="http://planet-sl.org/bgf" xmlns:xbgf="http://planet-sl.org/xbgf" xmlns:exbgf="http://planet-sl.org/exbgf">
	<!--
  The type system of the syntax appendix looks like this:
  
  Type is defined as:
     Identifier { "." Identifier } BracketsOpt
     BasicType
  BasicType is defined as:
     "byte"
     "short"
     "char"
     "int"
     "long"
     "float"
     "double"
     "boolean"
  TypeList is defined as:
     Type { "," Type }
  
  While the collected version is more complicated:
  
  Type is defined as:
     PrimitiveType
     ReferenceType
  PrimitiveType is defined as:
     NumericType
     "boolean"
  NumericType is defined as:
     IntegralType
     FloatingPointType
  IntegralType is defined as:
     "byte"
     "short"
     "int"
     "long"
     "char"
  FloatingPointType is defined as:
     "float"
     "double"
  ReferenceType is defined as:
     ClassOrInterfaceType
     ArrayType
  ClassOrInterfaceType is defined as:
     ClassType
     InterfaceType
  ClassType is defined as:
     TypeName
  ClassTypeList is defined as:
     ClassType
     ClassTypeList "," ClassType
  InterfaceType is defined as:
     TypeName
  InterfaceTypeList is defined as:
     InterfaceType
     InterfaceTypeList "," InterfaceType
  TypeName is defined as:
     Identifier
     PackageOrTypeName "." Identifier
  PackageOrTypeName is defined as:
     Identifier
     PackageOrTypeName "." Identifier
  ArrayType is defined as:
     Type "[" "]"
  ResultType is defined as:
     Type
     "void"
  -->
	<!-- 
  First composing BasicType out of PrimitiveType, NumericType, FloatingPointType & IntegralType -->
	<exbgf:inlineV>IntegralType</exbgf:inlineV>
	<exbgf:inlineV>FloatingPointType</exbgf:inlineV>
	<exbgf:inlineV>NumericType</exbgf:inlineV>
	<xbgf:vertical>
		<nonterminal>BasicType</nonterminal>
	</xbgf:vertical>
	<!-- RELAXATION -->
	<exbgf:removeV>
		<bgf:production>
			<nonterminal>ReferenceType</nonterminal>
			<bgf:expression>
				<nonterminal>ArrayType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</exbgf:removeV>
	<xbgf:eliminate>
		<nonterminal>ArrayType</nonterminal>
	</xbgf:eliminate>
	<xbgf:inline>ReferenceType</xbgf:inline>
	<!-- ISSUE PERMISSIVENESS
  Merging interfaces with classes and making lists and other things conform -->
	<!-- exactly like in refactorTypes-doc3
  *Type:
        ReferenceType
  ReferenceType:
        ClassOrInterfaceType
  *ClassOrInterfaceType:
        ClassType
  -->
	<!-- ex-ClassTypeList -->
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>TypeList</nonterminal>
			<bgf:expression>
				<marked>
					<bgf:expression>
						<nonterminal>ClassOrInterfaceType</nonterminal>
					</bgf:expression>
				</marked>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>ClassOrInterfaceType</nonterminal>
			<bgf:expression>
				<nonterminal>ClassType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>TypeList</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>TypeList</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>,</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>ClassOrInterfaceType</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>ClassOrInterfaceType</nonterminal>
			<bgf:expression>
				<nonterminal>ClassType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>TypeList</nonterminal>
			<bgf:expression>
				<marked>
					<bgf:expression>
						<nonterminal>Type</nonterminal>
					</bgf:expression>
				</marked>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>Type</nonterminal>
			<bgf:expression>
				<nonterminal>ClassOrInterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>TypeList</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>TypeList</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>,</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>Type</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>Type</nonterminal>
			<bgf:expression>
				<nonterminal>ClassOrInterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!--InterfaceTypeList-->
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>InterfaceTypeList</nonterminal>
			<bgf:expression>
				<marked>
					<bgf:expression>
						<nonterminal>ClassOrInterfaceType</nonterminal>
					</bgf:expression>
				</marked>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>ClassOrInterfaceType</nonterminal>
			<bgf:expression>
				<nonterminal>InterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>InterfaceTypeList</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>InterfaceTypeList</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>,</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>ClassOrInterfaceType</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>ClassOrInterfaceType</nonterminal>
			<bgf:expression>
				<nonterminal>InterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>InterfaceTypeList</nonterminal>
			<bgf:expression>
				<marked>
					<bgf:expression>
						<nonterminal>Type</nonterminal>
					</bgf:expression>
				</marked>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>Type</nonterminal>
			<bgf:expression>
				<nonterminal>ClassOrInterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>InterfaceTypeList</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>InterfaceTypeList</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>,</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>Type</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>Type</nonterminal>
			<bgf:expression>
				<nonterminal>ClassOrInterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!--ExtendsInterfaces-->
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>ExtendsInterfaces</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>extends</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>ClassOrInterfaceType</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>ClassOrInterfaceType</nonterminal>
			<bgf:expression>
				<nonterminal>InterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>ExtendsInterfaces</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>ExtendsInterfaces</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>,</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>ClassOrInterfaceType</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>ClassOrInterfaceType</nonterminal>
			<bgf:expression>
				<nonterminal>InterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>ExtendsInterfaces</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>extends</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>Type</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>Type</nonterminal>
			<bgf:expression>
				<nonterminal>ClassOrInterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>ExtendsInterfaces</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>ExtendsInterfaces</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>,</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>Type</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>Type</nonterminal>
			<bgf:expression>
				<nonterminal>ClassOrInterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!--Super-->
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>Super</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>extends</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>ClassOrInterfaceType</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>ClassOrInterfaceType</nonterminal>
			<bgf:expression>
				<nonterminal>ClassType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>Super</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>extends</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>Type</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>Type</nonterminal>
			<bgf:expression>
				<nonterminal>ClassOrInterfaceType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<!-- RELAXATION -->
	<xbgf:unite>
		<add>InterfaceType</add>
		<to>ClassType</to>
	</xbgf:unite>
	<!-- RELAXATION -->
	<xbgf:unite>
		<add>InterfaceTypeList</add>
		<to>TypeList</to>
	</xbgf:unite>
	<xbgf:deyaccify>
		<nonterminal>TypeList</nonterminal>
	</xbgf:deyaccify>
	<!-- Introducing brackets brutally, too hard to derive -->
	<!-- RELAXATION -->
	<xbgf:appear>
		<bgf:production>
			<nonterminal>ClassOrInterfaceType</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>ClassType</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<star>
									<bgf:expression>
										<sequence>
											<bgf:expression>
												<terminal>[</terminal>
											</bgf:expression>
											<bgf:expression>
												<terminal>]</terminal>
											</bgf:expression>
										</sequence>
									</bgf:expression>
								</star>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:appear>
	<xbgf:extract>
		<bgf:production>
			<nonterminal>BracketsOpt</nonterminal>
			<bgf:expression>
				<star>
					<bgf:expression>
						<sequence>
							<bgf:expression>
								<terminal>[</terminal>
							</bgf:expression>
							<bgf:expression>
								<terminal>]</terminal>
							</bgf:expression>
						</sequence>
					</bgf:expression>
				</star>
			</bgf:expression>
		</bgf:production>
	</xbgf:extract>
	<!-- Finishing touches -->
	<xbgf:inline>ClassOrInterfaceType</xbgf:inline>
	<xbgf:inline>ClassType</xbgf:inline>
</exbgf:sequence>
