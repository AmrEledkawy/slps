<?xml version="1.0" encoding="UTF-8"?>
<exbgf:sequence xmlns:bgf="http://planet-sl.org/bgf" xmlns:xbgf="http://planet-sl.org/xbgf" xmlns:exbgf="http://planet-sl.org/exbgf">
	<xbgf:deyaccify>
		<nonterminal>Name</nonterminal>
	</xbgf:deyaccify>
	<!-- 
   - Fail: ClassOrInterfaceType.
      - [], ;([n(ClassType), n(InterfaceType)])
     vs.
      - [], n(Name)
   - Fail: ClassType.
      - [], n(Name)
     vs.
      - [], n(ClassOrInterfaceType)
   - Fail: InterfaceType.
      - [], n(Name)
     vs.
      - [], n(ClassOrInterfaceType)
      
      NB: The following two folds are virtually chain transformations, but performed for an existing definition.
  -->
	<xbgf:horizontal>
		<nonterminal>ClassOrInterfaceType</nonterminal>
	</xbgf:horizontal>
	<!-- GENERALITY -->
	<!-- RELAXATION -->
	<exbgf:shieldedD>
		<entity>
			<choice>
				<bgf:expression>
					<nonterminal>ClassType</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>InterfaceType</nonterminal>
				</bgf:expression>
			</choice>
		</entity>
		<exbgf:renameN>
			<from>SHIELDED-ENTITY</from>
			<to>Name</to>
			<in>ClassOrInterfaceType</in>
		</exbgf:renameN>
	</exbgf:shieldedD>
	<xbgf:fold>
		<nonterminal>ClassOrInterfaceType</nonterminal>
		<in>
			<nonterminal>ClassType</nonterminal>
		</in>
	</xbgf:fold>
	<xbgf:fold>
		<nonterminal>ClassOrInterfaceType</nonterminal>
		<in>
			<nonterminal>InterfaceType</nonterminal>
		</in>
	</xbgf:fold>
	<!-- 
  - Fail: MethodHeader.
      - [], ,([?(n(MethodModifiers)), n(ResultType), n(MethodDeclarator), ?(n(Throws))])
     vs.
      - [], ;([,([?(n(Modifiers)), n(Type), n(MethodDeclarator), ?(n(Throws))]),
               ,([?(n(Modifiers)), t(void), n(MethodDeclarator), ?(n(Throws))])])
  - Fail: AbstractMethodDeclaration.
      - [], ,([?(n(Modifiers)), n(ResultType), n(MethodDeclarator), ?(n(Throws)), t((;))])
     vs.
      - [], ,([n(MethodHeader), t((;))])
  -->
	<xbgf:fold>
		<nonterminal>MethodHeader</nonterminal>
		<in>
			<nonterminal>AbstractMethodDeclaration</nonterminal>
		</in>
	</xbgf:fold>
	<exbgf:inlineV>ResultType</exbgf:inlineV>
	<exbgf:distributeH>MethodHeader</exbgf:distributeH>
	<!-- 
   - Fail: ArrayCreationExpression.
      - [], ;([,([t(new), n(PrimitiveType), n(DimExprs), ?(n(Dims))]), ,([t(new), n(Name), n(DimExprs), ?(n(Dims))])])
     vs.
      - [], ;([,([t(new), n(PrimitiveType), n(DimExprs), ?(n(Dims))]), ,([t(new), n(ClassOrInterfaceType), n(DimExprs), ?(n(Dims))])])
   -->
	<xbgf:fold>
		<nonterminal>ClassOrInterfaceType</nonterminal>
		<in>
			<nonterminal>ArrayCreationExpression</nonterminal>
		</in>
	</xbgf:fold>
	<!-- 
   - Fail: CastExpression.
      - [], ;([,([t((), n(PrimitiveType), ?(n(Dims)), t()), n(UnaryExpression)]),
               ,([t((), n(ReferenceType), t()), n(UnaryExpressionNotPlusMinus)])])
     vs.
      - [], ;([,([t((), n(PrimitiveType), ?(n(Dims)), t()), n(UnaryExpression)]),
               ,([t((), n(Expression), t()), n(UnaryExpressionNotPlusMinus)]),
               ,([t((), n(Name), n(Dims), t()), n(UnaryExpressionNotPlusMinus)])])
  -->
	<!-- GENERALITY -->
	<!-- RELAXATION -->
	<exbgf:shieldedU>
		<entity>
			<choice>
				<bgf:expression>
					<nonterminal>Expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>Name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>Dims</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</entity>
		<exbgf:renameN>
			<from>ReferenceType</from>
			<to>SHIELDED-ENTITY</to>
			<in>CastExpression</in>
		</exbgf:renameN>
	</exbgf:shieldedU>
	<exbgf:distributeH>CastExpression</exbgf:distributeH>
	<!-- BREFACTOR 
   - Fail: ConstantDeclaration.
      - [], ,([?(n(Modifiers)), n(Type), n(VariableDeclarator)])
     vs.
      - [], n(FieldDeclaration)
      
  FieldDeclaration is completely structurally different, so this is the only way.
  Possibly a spec error - there should be multiple modifiers allowed, really.
  -->
	<exbgf:shieldedD>
		<entity>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>Modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>Type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>VariableDeclarator</nonterminal>
				</bgf:expression>
			</sequence>
		</entity>
		<exbgf:renameN>
			<from>SHIELDED-ENTITY</from>
			<to>FieldDeclaration</to>
			<in>ConstantDeclaration</in>
		</exbgf:renameN>
	</exbgf:shieldedD>
	<!-- 
   - Fail: ArrayType.
      - [], ,([n(Type), t([), t(])])
     vs.
      - [], ;([,([n(PrimitiveType), t([), t(])]), ,([n(Name), t([), t(])]), ,([n(ArrayType), t([), t(])])])
  -->
	<exbgf:unfoldV>
		<nonterminal>Type</nonterminal>
		<in>ArrayType</in>
	</exbgf:unfoldV>
	<exbgf:unfoldV>
		<nonterminal>ReferenceType</nonterminal>
		<in>ArrayType</in>
	</exbgf:unfoldV>
	<xbgf:unfold>
		<nonterminal>ClassOrInterfaceType</nonterminal>
		<in>
			<nonterminal>ArrayType</nonterminal>
		</in>
	</xbgf:unfold>
	<exbgf:distributeH>ArrayType</exbgf:distributeH>
</exbgf:sequence>
