<?xml version="1.0" encoding="UTF-8"?>
<exbgf:sequence xmlns:bgf="http://planet-sl.org/bgf" xmlns:xbgf="http://planet-sl.org/xbgf" xmlns:exbgf="http://planet-sl.org/exbgf">
	<!-- ISSUE EXTEND  -->
	<xbgf:introduce>
		<bgf:production>
			<nonterminal>PackageOrTypeName</nonterminal>
			<bgf:expression>
				<nonterminal>Identifier</nonterminal>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>PackageOrTypeName</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>PackageOrTypeName</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>.</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:introduce>
	<!--
  Local substitution:
       - Fail: TypeImportOnDemandDeclaration.
      - [], ,([t(import), n(PackageName), t(.), t(*), t((;))])
     vs.
      - [], ,([t(import), n(PackageOrTypeName), t(.), t(*), t((;))])
     - Fail: TypeName.
      - [], ;([n(Identifier), ,([n(PackageName), t(.), n(Identifier)])])
     vs.
      - [], ;([n(Identifier), ,([n(PackageOrTypeName), t(.), n(Identifier)])])
  -->
	<exbgf:unfoldY>
		<nonterminal>PackageName</nonterminal>
		<in>TypeImportOnDemandDeclaration</in>
		<in>TypeName</in>
	</exbgf:unfoldY>
	<exbgf:foldY>
		<nonterminal>PackageOrTypeName</nonterminal>
		<in>TypeImportOnDemandDeclaration</in>
		<in>TypeName</in>
	</exbgf:foldY>
	<!-- 
  Local substitute + add + horizontal:
     - Fail: ClassInstanceCreationExpression.
      - [], ,([t(new), n(ClassType), t((), ?(n(ArgumentList)), t())])
     vs.
      - [], ;([,([t(new), n(ClassOrInterfaceType), t((), ?(n(ArgumentList)), t()), ?(n(ClassBody))]),
               ,([n(Primary), t(.), t(new), n(Identifier), t((), ?(n(ArgumentList)), t()), ?(n(ClassBody))])])
  -->
	<!-- EXTENSION -->
	<xbgf:upgrade>
		<bgf:production>
			<nonterminal>ClassInstanceCreationExpression</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>new</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<nonterminal>ClassOrInterfaceType</nonterminal>
							</bgf:expression>
						</marked>
					</bgf:expression>
					<bgf:expression>
						<terminal>(</terminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>ArgumentList</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>)</terminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<bgf:production>
			<nonterminal>ClassOrInterfaceType</nonterminal>
			<bgf:expression>
				<nonterminal>ClassType</nonterminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:upgrade>
	<exbgf:addV>
		<!-- EXTENSION -->
		<bgf:production>
			<nonterminal>ClassInstanceCreationExpression</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>new</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>ClassOrInterfaceType</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>(</terminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>ArgumentList</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>)</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>ClassBody</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<!-- EXTENSION -->
		<bgf:production>
			<nonterminal>ClassInstanceCreationExpression</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>Primary</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>.</terminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>new</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>(</terminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>ArgumentList</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<terminal>)</terminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>ClassBody</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</exbgf:addV>
	<exbgf:atomicV>
		<context>ClassInstanceCreationExpression</context>
		<exbgf:factor-out>
			<start>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>ClassOrInterfaceType</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>ArgumentList</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</start>
			<choice>
				<bgf:expression>
					<epsilon/>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>ClassBody</nonterminal>
				</bgf:expression>
			</choice>
			<tail/>
		</exbgf:factor-out>
		<exbgf:massageC2O>
			<nonterminal>ClassBody</nonterminal>
		</exbgf:massageC2O>
	</exbgf:atomicV>
</exbgf:sequence>
