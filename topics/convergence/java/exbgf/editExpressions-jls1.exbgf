<?xml version="1.0" encoding="UTF-8"?>
<exbgf:sequence xmlns:bgf="http://planet-sl.org/bgf" xmlns:xbgf="http://planet-sl.org/xbgf" xmlns:exbgf="http://planet-sl.org/exbgf">
	<!-- 
   - Fail: Primary.
      - [], n(ArrayCreationExpression)
      - [], n(PrimaryNoNewArray)
     vs.
      - [], ;([,([t((), n(Expression), t())]), ,([t(this), ?(n(Arguments))]), ,([t(super), n(SuperSuffix)]), n(Literal), ,([t(new), n(Creator)]), ,([n(QualifiedIdentifier), ?(n(IdentifierSuffix))]), ,([n(BasicType), n(BracketsOpt), t(.), t(class)]), ,([t(void), t(.), t(class)])])
  -->
	<exbgf:inlineV>ArrayCreationExpression</exbgf:inlineV>
	<exbgf:inlineV>PrimaryNoNewArray</exbgf:inlineV>
	<exbgf:shielded>
		<entity>
			<sequence>
				<bgf:expression>
					<terminal>[</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>]</terminal>
				</bgf:expression>
			</sequence>
		</entity>
		<exbgf:inlineYO starof="SHIELDED-ENTITY">Dims</exbgf:inlineYO>
		<exbgf:inlineY>DimExprs</exbgf:inlineY>
		<xbgf:inline>DimExpr</xbgf:inline>
	</exbgf:shielded>
	<xbgf:fold>
		<nonterminal>BracketsOpt</nonterminal>
		<in>
			<nonterminal>Primary</nonterminal>
		</in>
	</xbgf:fold>
	<xbgf:inline>ClassInstanceCreationExpression</xbgf:inline>
	<exbgf:inlineV>FieldAccess</exbgf:inlineV>
	<exbgf:inlineV>MethodInvocation</exbgf:inlineV>
	<!--  
  <xbgf:inline>ArrayAccess</xbgf:inline>
-->
	<exbgf:atomicV>
		<context>Primary</context>
		<!-- 
  Multiple cases like this one:
  
   - Fail: Primary.
       - [], ,([t(new), n(QualifiedIdentifier), t((), ?(n(ArgumentList)), t())])
     vs.
       - [], ,([t(new), n(QualifiedIdentifier), n(Arguments)])
 -->
		<exbgf:inlineY>ArgumentList</exbgf:inlineY>
		<xbgf:fold>
			<nonterminal>Arguments</nonterminal>
		</xbgf:fold>
		<!-- 
   - Fail: Primary.
      - [], ,([t(super), t(.), n(Identifier), n(Arguments)])
      - [], ,([t(super), t(.), n(Identifier)])
     vs.
      - [], ,([t(super), n(SuperSuffix)])
  -->
		<exbgf:factor-out>
			<start>
				<bgf:expression>
					<terminal>super</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>.</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>Identifier</nonterminal>
				</bgf:expression>
			</start>
			<choice>
				<bgf:expression>
					<nonterminal>Arguments</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<epsilon/>
				</bgf:expression>
			</choice>
			<tail/>
		</exbgf:factor-out>
		<exbgf:massageC2O>
			<nonterminal>Arguments</nonterminal>
		</exbgf:massageC2O>
		<xbgf:extract>
			<bgf:production>
				<nonterminal>SuperSuffix</nonterminal>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>Identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>Arguments</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</bgf:production>
			<in>
				<nonterminal>Primary</nonterminal>
			</in>
		</xbgf:extract>
	</exbgf:atomicV>
	<!-- 
  too hard to match:
        - [], n(ArrayAccess)
  -->
	<!-- RELAXATION -->
	<exbgf:removeV>
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<nonterminal>ArrayAccess</nonterminal>
			</bgf:expression>
		</bgf:production>
	</exbgf:removeV>
	<xbgf:eliminate>
		<nonterminal>ArrayAccess</nonterminal>
	</xbgf:eliminate>
	<!-- ISSUE EXTEND 
      - [], ,([n(QualifiedIdentifier), n(Arguments)])
     vs.
      - [], ,([n(QualifiedIdentifier), ?(n(IdentifierSuffix))])
  -->
	<xbgf:extract>
		<bgf:production>
			<nonterminal>IdentifierSuffix</nonterminal>
			<bgf:expression>
				<nonterminal>Arguments</nonterminal>
			</bgf:expression>
		</bgf:production>
		<in>
			<nonterminal>Primary</nonterminal>
		</in>
	</xbgf:extract>
	<!-- RELAXATION -->
	<exbgf:widen12O>
		<nonterminal>IdentifierSuffix</nonterminal>
		<in>Primary</in>
	</exbgf:widen12O>
	<!-- ISSUE EXTEND BRUTAL
  same problem -->
	<!-- RELAXATION -->
	<exbgf:removeV>
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>new</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>QualifiedIdentifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>IdentifierSuffix</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<!-- RELAXATION -->
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>new</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>BasicType</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<plus>
							<bgf:expression>
								<sequence>
									<bgf:expression>
										<terminal>[</terminal>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>Expression</nonterminal>
									</bgf:expression>
									<bgf:expression>
										<terminal>]</terminal>
									</bgf:expression>
								</sequence>
							</bgf:expression>
						</plus>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>BracketsOpt</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<!-- RELAXATION -->
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>new</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>QualifiedIdentifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<plus>
							<bgf:expression>
								<sequence>
									<bgf:expression>
										<terminal>[</terminal>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>Expression</nonterminal>
									</bgf:expression>
									<bgf:expression>
										<terminal>]</terminal>
									</bgf:expression>
								</sequence>
							</bgf:expression>
						</plus>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>BracketsOpt</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<!-- 
		  implemented elsewise 
		      - [], ,([n(Primary), t(.), n(Identifier), n(Arguments)])
		      - [], ,([n(Primary), t(.), n(Identifier)])
		-->
		<!-- RELAXATION -->
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>Primary</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>.</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>IdentifierSuffix</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<!-- RELAXATION -->
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>Primary</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>.</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Identifier</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</exbgf:removeV>
	<exbgf:addV>
		<!-- RELAXATION -->
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>new</terminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>Creator</nonterminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<!-- ISSUE EXTEND
	  new stuff
	  ,([n(BasicType), n(BracketsOpt), t(.), t(class)]), ,([t(void), t(.), t(class)])-->
		<!-- EXTENSION -->
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>BasicType</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<nonterminal>BracketsOpt</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>.</terminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>class</terminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
		<!-- EXTENSION -->
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>void</terminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>.</terminal>
					</bgf:expression>
					<bgf:expression>
						<terminal>class</terminal>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</exbgf:addV>
	<!-- GENERALITY -->
	<!-- RELAXATION -->
	<xbgf:define>
		<bgf:production>
			<nonterminal>Creator</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<nonterminal>QualifiedIdentifier</nonterminal>
					</bgf:expression>
					<bgf:expression>
						<choice>
							<bgf:expression>
								<nonterminal>ArrayCreatorRest</nonterminal>
							</bgf:expression>
							<bgf:expression>
								<nonterminal>ClassCreatorRest</nonterminal>
							</bgf:expression>
						</choice>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:define>
	<!-- GENERALITY -->
	<!-- RELAXATION -->
	<xbgf:define>
		<bgf:production>
			<nonterminal>ArrayCreatorRest</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>[</terminal>
					</bgf:expression>
					<bgf:expression>
						<choice>
							<bgf:expression>
								<sequence>
									<bgf:expression>
										<terminal>]</terminal>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>BracketsOpt</nonterminal>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>ArrayInitializer</nonterminal>
									</bgf:expression>
								</sequence>
							</bgf:expression>
							<bgf:expression>
								<sequence>
									<bgf:expression>
										<nonterminal>Expression</nonterminal>
									</bgf:expression>
									<bgf:expression>
										<terminal>]</terminal>
									</bgf:expression>
									<bgf:expression>
										<star>
											<bgf:expression>
												<sequence>
													<bgf:expression>
														<terminal>[</terminal>
													</bgf:expression>
													<bgf:expression>
														<nonterminal>Expression</nonterminal>
													</bgf:expression>
													<bgf:expression>
														<terminal>]</terminal>
													</bgf:expression>
												</sequence>
											</bgf:expression>
										</star>
									</bgf:expression>
									<bgf:expression>
										<nonterminal>BracketsOpt</nonterminal>
									</bgf:expression>
								</sequence>
							</bgf:expression>
						</choice>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:define>
	<xbgf:fold>
		<nonterminal>ParExpression</nonterminal>
	</xbgf:fold>
	<!-- ISSUE EXTEND 
   - Fail: Primary.
      - [], t(this)
     vs.
      - [], ,([t(this), ?(n(Arguments))])
  -->
	<!-- EXTENSION -->
	<xbgf:appear>
		<bgf:production>
			<nonterminal>Primary</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<terminal>this</terminal>
					</bgf:expression>
					<bgf:expression>
						<marked>
							<bgf:expression>
								<optional>
									<bgf:expression>
										<nonterminal>Arguments</nonterminal>
									</bgf:expression>
								</optional>
							</bgf:expression>
						</marked>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:appear>
</exbgf:sequence>
