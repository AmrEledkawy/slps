<?xml version="1.0"?>
<lcf:configuration xmlns:lcf="http://planet-sl.org/lcf">
	<shortcut>
		<name>slps</name>
		<expansion>../../..</expansion>
	</shortcut>
	<shortcut>
		<name>fl</name>
		<expansion>../../fl</expansion>
	</shortcut>
	<shortcut>
		<name>tools</name>
		<expansion><expand>slps</expand>/shared/tools</expansion>
	</shortcut>
	<shortcut>
		<name>wrappers</name>
		<expansion><expand>slps</expand>/shared/wrappers</expansion>
	</shortcut>
	<shortcut>
		<name>generators</name>
		<expansion><expand>slps</expand>/shared/generators</expansion>
	</shortcut>
	<tools>
		<transformer>
			<grammar><expand>tools</expand>/xbgf</grammar>
			<tree><expand>tools</expand>/xbtf</tree>
		</transformer>
		<comparator>
			<grammar><expand>tools</expand>/gdt</grammar>
			<tree><expand>tools</expand>/tdt</tree>
		</comparator>
		<validator>
			<grammar><expand>tools</expand>/validate bgf</grammar>
			<tree><expand>tools</expand>/validate btf</tree>
		</validator>
		<generator>
			<name>case</name>
			<command><expand>generators</expand>/casexbgf 3</command>
		</generator>
		<generator>
			<name>stript</name>
			<command><expand>generators</expand>/striptxbgf</command>
		</generator>
		<generator>
			<name>strips</name>
			<command><expand>generators</expand>/stripsxbgf</command>
		</generator>
		<generator>
			<name>reroot2top</name>
			<command><expand>generators</expand>/reroot2top</command>
		</generator>
	</tools>
	<source>
		<name>antlr</name>
		<grammar>
			<extraction><expand>tools</expand>/antlr2bgf <expand>fl</expand>/java1/FL.g
      </extraction>
			<parsing><expand>wrappers</expand>/runantlrparser
      </parsing>
			<evaluation><expand>wrappers</expand>/runantlrevaluator
      </evaluation>
		</grammar>
		<testing>
			<set>codesamples</set>
		</testing>
	</source>
	<source>
		<name>dcg</name>
		<grammar>
			<extraction><expand>tools</expand>/dcg2bgf <expand>fl</expand>/prolog1/Parser.pro
      </extraction>
			<parsing><expand>wrappers</expand>/runprologparser
      </parsing>
			<evaluation><expand>wrappers</expand>/runprologevaluator
      </evaluation>
		</grammar>
		<testing>
			<set>codesamples</set>
		</testing>
	</source>
	<source>
		<name>sdf</name>
		<grammar>
			<extraction><expand>tools</expand>/sdf2bgf <expand>fl</expand>/asfsdf/*.sdf
      </extraction>
			<parsing><expand>wrappers</expand>/runasfsdfparser
      </parsing>
			<evaluation><expand>wrappers</expand>/runasfsdfevaluator
      </evaluation>
		</grammar>
		<tree>
			<extraction><expand>tools</expand>/asfix2btf bgf/sdf.bgf
      </extraction>
			<evaluation><expand>wrappers</expand>/runbtfevaluator
      </evaluation>
		</tree>
		<testing>
			<set>codesamples</set>
		</testing>
	</source>
	<source>
		<name>txl</name>
		<grammar>
			<extraction><expand>tools</expand>/txl2bgf <expand>fl</expand>/txl/FL.Txl
      </extraction>
		</grammar>
	</source>
	<source>
		<name>ecore</name>
		<grammar>
			<extraction><expand>tools</expand>/ecore2bgf <expand>fl</expand>/emf1/fl.ecore
      </extraction>
		</grammar>
	</source>
	<source>
		<name>ecore2</name>
		<derived>
			<from>xsd</from>
			<using>xsd2ecore</using>
		</derived>
		<grammar>
			<extraction><expand>tools</expand>/ecore2bgf <expand>fl</expand>/emf2/model/fl.ecore
      </extraction>
		</grammar>
	</source>
	<source>
		<name>xsd</name>
		<grammar>
			<extraction><expand>tools</expand>/xsd2bgf <expand>fl</expand>/xsd/fl.xsd
      </extraction>
			<parsing><expand>wrappers</expand>/runxsdparser
      </parsing>
			<evaluation><expand>wrappers</expand>/runxqueryevaluator
      </evaluation>
		</grammar>
		<tree>
			<extraction><expand>tools</expand>/xml2btf <expand>fl</expand>/xsd/fl.xsd
      </extraction>
		</tree>
		<testing>
			<set>xmlsamples</set>
		</testing>
	</source>
	<source>
		<name>om</name>
		<grammar>
			<extraction><expand>tools</expand>/java2bgf <expand>fl</expand>/java1 types
      </extraction>
		</grammar>
	</source>
	<source>
		<name>jaxb</name>
		<derived>
			<from>xsd</from>
			<using>xjc</using>
		</derived>
		<grammar>
			<extraction><expand>tools</expand>/java2bgf <expand>fl</expand>/java3 fl
      </extraction>
		</grammar>
	</source>
	<target>
		<name>topdown</name>
		<branch>
			<input>dcg</input>
		</branch>
		<branch>
			<input>antlr</input>
			<normalizing>
				<perform>normalize-antlr-topdown</perform>
			</normalizing>
			<structural-matching>
				<perform>preferDcg-1</perform>
				<perform>preferDcg-2</perform>
				<perform>preferDcg-3</perform>
				<perform>preferDcg-4</perform>
				<perform>preferDcg-5</perform>
				<perform>preferDcg-6</perform>
				<perform>preferDcg-7</perform>
				<perform>preferDcg-8</perform>
				<perform>designateOps-1</perform>
				<perform>designateOps-2</perform>
				<perform>designateOps-3</perform>
			</structural-matching>
		</branch>
	</target>
	<target>
		<name>xframeworks</name>
		<branch>
			<input>sdf</input>
			<normalizing>
				<perform>normalize-sdf-xframeworks</perform>
			</normalizing>
		</branch>
		<branch>
			<input>txl</input>
			<normalizing>
				<perform>normalize-txl-xframeworks</perform>
			</normalizing>
			<structural-matching>
				<perform>preferSdf-1</perform>
				<perform>preferSdf-2</perform>
				<perform>preferSdf-3</perform>
				<perform>preferSdf-4</perform>
				<perform>preferSdf-5</perform>
				<perform>preferSdf-6</perform>
				<perform>preferSdf-7</perform>
				<perform>designateOps-1</perform>
				<perform>designateOps-2</perform>
				<perform>designateOps-3</perform>
			</structural-matching>
			<relaxation>
				<perform>multipleNewlines-1</perform>
			</relaxation>
		</branch>
	</target>
	<target>
		<name>concrete</name>
		<branch>
			<input>topdown</input>
			<structural-matching>
				<perform>removeLayers-1</perform>
				<perform>removeLayers-2</perform>
			</structural-matching>
		</branch>
		<branch>
			<input>xframeworks</input>
		</branch>
	</target>
	<target>
		<name>model</name>
		<branch>
			<input>ecore</input>
			<normalizing>
				<perform>normalize-ecore-model</perform>
			</normalizing>
			<structural-matching>
				<perform>extractOps-1</perform>
				<perform>extractOps-2</perform>
				<perform>extractOps-3</perform>
				<perform>extractOps-4</perform>
				<perform>extractOps-5</perform>
				<perform>extractOps-6</perform>
				<perform>extractOps-7</perform>
				<perform>extractOps-8</perform>
				<perform>extractOps-9</perform>
			</structural-matching>
			<relaxation>
				<perform>resolveAggregation-1</perform>
			</relaxation>
		</branch>
		<branch>
			<input>ecore2</input>
			<normalizing>
				<perform>normalize-ecore2-model</perform>
			</normalizing>
		</branch>
		<branch>
			<input>xsd</input>
			<normalizing>
				<perform>normalize-xsd-model</perform>
			</normalizing>
		</branch>
	</target>
	<target>
		<name>java</name>
		<branch>
			<input>jaxb</input>
			<normalizing>
				<perform>normalize-jaxb-java</perform>
			</normalizing>
		</branch>
		<branch>
			<input>om</input>
			<normalizing>
				<perform>normalize-om-java</perform>
			</normalizing>
		</branch>
	</target>
	<target>
		<name>abstract</name>
		<branch>
			<input>java</input>
			<structural-matching>
				<perform>unerase-1</perform>
				<perform>unerase-2</perform>
				<perform>unerase-3</perform>
				<perform>unerase-4</perform>
				<perform>unerase-5</perform>
				<perform>unerase-6</perform>
				<perform>reroot-lower-1</perform>
			</structural-matching>
		</branch>
		<branch>
			<input>model</input>
			<normalizing>
				<perform>normalize-model-abstract</perform>
			</normalizing>
			<structural-matching>
				<perform>massage-model-1</perform>
				<perform>massage-model-2</perform>
				<perform>massage-model-3</perform>
			</structural-matching>
		</branch>
	</target>
	<target>
		<name>limit</name>
		<branch>
			<input>concrete</input>
			<structural-matching>
				<perform>reroot-lower-1</perform>
				<perform>defineLex-1</perform>
				<perform>defineLex-2</perform>
				<perform>defineLex-3</perform>
				<perform>defineLex-4</perform>
				<perform>stripTerminals-1</perform>
				<perform>stripTerminals-2</perform>
				<perform>stripTerminals-3</perform>
				<perform>stripTerminals-4</perform>
				<perform>stripTerminals-5</perform>
				<perform>stripTerminals-6</perform>
				<perform>stripNewline-1</perform>
				<perform>stripNewline-2</perform>
				<perform>permuteArgs-1</perform>
			</structural-matching>
		</branch>
		<branch>
			<input>abstract</input>
			<structural-matching>
				<perform>makeSignature-1</perform>
				<perform>makeSignature-2</perform>
				<perform>makeSignature-3</perform>
				<perform>makeSignature-4</perform>
				<perform>makeSignature-5</perform>
				<perform>makeSignature-6</perform>
				<perform>makeSignature-7</perform>
				<perform>stripSelectors-1</perform>
				<perform>stripSelectors-2</perform>
				<perform>stripSelectors-3</perform>
				<perform>stripSelectors-4</perform>
				<perform>stripSelectors-5</perform>
				<perform>stripSelectors-6</perform>
				<perform>stripSelectors-7</perform>
			</structural-matching>
		</branch>
	</target>
</lcf:configuration>
