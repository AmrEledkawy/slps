module Main

  imports 
	languages/asfix/syntax/Parsetree
	languages/xml/syntax/XML
	basic/NatCon
	AsFixToBGF
	AsFixTokens
	Tokens

  exports

    sorts Document ParseTree Tree

    context-free syntax
	main(ParseTree) -> Document

    context-free start-symbols
	Document

  hiddens

    context-free syntax
	trafoTree(Tree) -> Content*
	trafoTrees({Tree ","}*) -> Content*
	getName(Tree) -> Content*
	"mapTrees" "(" {Tree ","}* ")" -> Content*
	"mapTree" "(" Tree ")" -> Element
%%	"mapTree2Tree" "(" Tree ")" -> Element
	"mapTrees2Trees" "(" Args ")" -> Content*
	"mapTree2Expr" "(" Tree ")" -> Element
	"symbol2content" "(" Symbol ")" -> Content
	"mapExpr" "(" Symbol ")" -> Content*
	"mapExprs" "(" Symbols ")" -> Content*
	%%trafoSymbol(Symbol) -> Element
	%%trafoSymbols(Symbols) -> Element
	%%mapTrafoSymbol(Symbols) -> Content*
	
    variables
	"&A" [0-9]+ -> Attribute
	"&A*" [0-9]+ -> Attribute*
	"&As" [0-9]+ -> Attributes
	"&C" [0-9]+ -> Content
	"&C*" [0-9]+ -> Content*
	"&E" [0-9]+ -> Element
	%% "&E*" [0-9]+ -> Element* %% Useless because of lack of covariance
	%%"&G" [0-9]+ -> Grammar
	%%"&M" [0-9]+ -> Module
	"&N" [0-9]+ -> Sort
	"&PT" [0-9]+ -> ParseTree
	"&T" [0-9]+ -> Tree
	"&T*" [0-9]+ -> Tree*
	"&Tcs" [0-9]+ -> {Tree ","}+		%% {Tree ","}*
	"&S" [0-9]+ -> Symbol
	"&S*" [0-9]+ -> Symbol*
	"&Ss" [0-9]+ -> Symbols
	"&Scs" [0-9]+ -> {Symbol ","}+
	"&Z" [0-9]+ -> StrCon
	"&P" [0-9]+ -> Production
	"&P*" [0-9]+ -> Production*
	"&Ps" [0-9]+ -> Productions
	"&I" [0-9]+ -> NatCon
	"&Ics" [0-9]+ -> {NatCon ","}+
	"&B" [0-9]+ -> Args
	"&CR" [0-9]+ -> CharRanges
