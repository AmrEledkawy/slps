Loading XML file 'tests/xbgf.bgf'.
g( [add, case, define, designate, eliminate, extract, fold, horizontal, id, inline, introduce, lassoc, modulo, permute, project, prune, relabel, relax, remove, rename, reroot, restrict, sequence, skip, strip, unchain, undefine, unfold, unite, vertical, grammar, production, expression], [
  p([], transformation, ;([n(add), n(case), n(define), n(designate), n(eliminate), n(extract), n(fold), n(horizontal), n(id), n(inline), n(introduce), n(lassoc), n(modulo), n(permute), n(project), n(prune), n(relax), n(relabel), n(remove), n(rename), n(reroot), n(restrict), n(sequence), n(skip), n(strip), n(unchain), n(undefine), n(unfold), n(unite), n(vertical)])),
  p([], add, n(production)),
  p([], case, ','([;([s(first, true), s(all, true)]), ;([s(up, true), s(down, true)])])),
  p([], define, +n(production)),
  p([], designate, n(production)),
  p([], eliminate, n(nonterminal)),
  p([], extract, n(production)),
  p([], fold, n(production)),
  p([], horizontal, n(nonterminal)),
  p([], id, true),
  p([], inline, n(nonterminal)),
  p([], introduce, +n(production)),
  p([], lassoc, n(production)),
  p([], modulo, n(production)),
  p([], permute, n(production)),
  p([], project, n(production)),
  p([], prune, n(nonterminal)),
  p([], relabel, n(production)),
  p([], relax, n(production)),
  p([], remove, n(production)),
  p([], rename, ;([s(label, ','([s(from, n(label)), s(to, n(label))])), s(nonterminal, ','([s(from, n(nonterminal)), s(to, n(nonterminal))])), s(selector, ','([?(s(in, n(label))), s(from, n(selector)), s(to, n(selector))])), s(terminal, ','([s(from, n(terminal)), s(to, n(terminal))]))])),
  p([], reroot, *(s(root, n(nonterminal)))),
  p([], restrict, n(production)),
  p([], sequence, *(n(transformation))),
  p([], skip, n(production)),
  p([], strip, ;([s(label, n(label)), s(allLabels, true), s(selector, n(selector)), s(allSelectors, true), s(terminal, n(terminal)), s(allTerminals, true)])),
  p([], unchain, n(nonterminal)),
  p([], undefine, n(nonterminal)),
  p([], unfold, n(production)),
  p([], unite, ','([s(add, n(nonterminal)), s(to, n(nonterminal))])),
  p([], vertical, ;([s(label, n(label)), s(nonterminal, n(nonterminal))])),
  p([], grammar, ','([*(s(root, n(nonterminal))), *(n(production))])),
  p([], production, ','([?(s(label, n(label))), s(nonterminal, n(nonterminal)), n(expression)])),
  p([], expression, ;([s(epsilon, true), s(empty, true), s(value, n(value)), s(any, true), s(terminal, n(terminal)), s(nonterminal, n(nonterminal)), s(selectable, ','([s(selector, n(selector)), n(expression)])), s(sequence, *(n(expression))), s(choice, *(n(expression))), s(optional, n(expression)), s(plus, n(expression)), s(star, n(expression))])),
  p([], value, ;([s(int, true), s(string, true)])),
  p([], label, v(string)),
  p([], nonterminal, v(string)),
  p([], selector, v(string)),
  p([], terminal, v(string))
])
