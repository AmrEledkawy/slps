module Tracing

imports Trace2Term
        languages/jimple/syntax/Jimple
        utilities/Parsing[Patterns]
        utilities/Parsing[Name]
        utilities/Parsing[File]
        basic/Strings

hiddens
context-free start-symbols
  Term Patterns File Stmt*

exports
sorts Patterns Parsetree[[Patterns]] Parsetree[[File]]

context-free syntax
  annotate(method:StrCon, jimple:StrCon, patterns:StrCon) -> Stmt*                                     
  trace(method:StrCon, jimple:StrCon, patterns:StrCon)    -> Term                                      
  annotate-method(File, Stmt*, method:StrCon, Patterns)   -> Stmt* {traversal(bottom-up, accu, break)} 
  annotate-method(Member, Stmt*, method:StrCon, Patterns) -> Stmt* {traversal(bottom-up, accu, break)} 

context-free syntax
  "trace" -> IdCon {reject} 

hiddens
variables
  "&fieldref" [0-9\']*    -> FieldRef          
  "&decl*" [0-9\']*       -> Declaration*      
  "&mod*" [0-9\']*        -> Modifier*         
  "&param*" [0-9\']*      -> {Parameter ","}*  
  "&throws?" [0-9\']*     -> ThrowsClause?     
  "&catch*" [0-9\']*      -> CatchClause*      
  "&member" [0-9\']*      -> Member            
  "&bytes" [0-9\']*       -> Bytes             
  "&file" [0-9\']*        -> File              
  "&strcon" [0-9\']*      -> StrCon            
  "&term" [0-9\']*        -> Term              
  "&term*" [0-9\']*       -> {Term ","}*       
  "&term+" [0-9\']*       -> {Term ","}+       
  "&value" [0-9\']*       -> Value             
  "&patterns" [0-9\']*    -> Patterns          
  "&pattern" [0-9\']*     -> Pattern           
  "&pattern*" [0-9\']*    -> {Pattern ","}*    
  "&pattern+" [0-9\']*    -> {Pattern ","}+    
  "&hole" [0-9\']*        -> Hole              
  "&hole*" [0-9\']*       -> {Hole ","}*       
  "&hole+" [0-9\']*       -> {Hole ","}+       
  "&idcon" [0-9\']*       -> IdCon             
  "&mem" [0-9\']*         -> Memory            
  "&heap" [0-9\']*        -> Heap              
  "&fieldref" [0-9\']*    -> FieldRef          
  "&type" [0-9\']*        -> Type              
  "&nonvoidtype" [0-9\']* -> NonVoidType       
  "&atid" [0-9\']*        -> AtIdentifier      
  "&btype" [0-9\']*       -> BaseType          
  "&n" [0-9\']*           -> Integer           
  "&natcon" [0-9\']*      -> NatCon            
  "&oid" [0-9\']*         -> OID               
  "&var" [0-9\']*         -> Variable          
  "&idlex" [0-9\']*       -> IdentifierLex     
  "&id" [0-9\']*          -> Identifier        
  "&stmt" [0-9\']*        -> Stmt              
  "&stmt*" [0-9\']*       -> Stmt*             
  "&stmt+" [0-9\']*       -> Stmt+             
  "&expr" [0-9\']*        -> Expr              
  "&name" [0-9\']*        -> Name              
  "&lname" [0-9\']*       -> LocalName         
  "&label" [0-9\']*       -> LabelName         
  "&atid" [0-9\']*        -> AtIdentifier      
  "&immed" [0-9\']*       -> Immediate         
  "&invoke" [0-9\']*      -> InvokeExpr        
  "&nonstatic" [0-9\']*   -> NonStaticInvoke   
  "&sig" [0-9\']*         -> MethodSignature   
  "&immed*" [0-9\']*      -> {Immediate ","}*  
  "&const" [0-9\']*       -> Constant          
  "&bool" [0-9\']*        -> BoolExpr          
  "&new" [0-9\']*         -> NewExpr           
