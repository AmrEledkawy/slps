public class de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM extends de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.ContactsToDocument
{

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] args;
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM temp$0;
        java.util.List temp$1;
        java.io.PrintStream temp$2;

        args := @parameter0: java.lang.String[];
        temp$0 = new de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        temp$1 = <de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: java.util.List PERSONS>;
        specialinvoke temp$0.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: void <init>(java.util.List)>(temp$1);
        temp$2 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: void save(java.io.OutputStream)>(temp$2);
        return;
    }

    public void <init>(java.util.List)
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        java.util.List contacts;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        contacts := @parameter0: java.util.List;
        specialinvoke this.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.ContactsToDocument: void <init>()>();
        this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: java.util.List contacts> = contacts;
        return;
    }

    public void save(java.io.OutputStream) throws java.io.IOException
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        java.io.OutputStream output;
        org.jdom.Document document, temp$0;
        org.jdom.output.XMLOutputter outputter, temp$1;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        output := @parameter0: java.io.OutputStream;
        temp$0 = virtualinvoke this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: org.jdom.Document makeDocument()>();
        document = temp$0;
        temp$1 = new org.jdom.output.XMLOutputter;
        specialinvoke temp$1.<org.jdom.output.XMLOutputter: void <init>()>();
        outputter = temp$1;
        virtualinvoke outputter.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>(document, output);
        return;
    }

    public void save14(java.io.OutputStream) throws java.io.IOException
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        java.io.OutputStream output;
        org.jdom.Document document, temp$0;
        org.jdom.output.XMLOutputter outputter, temp$1;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        output := @parameter0: java.io.OutputStream;
        temp$0 = virtualinvoke this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: org.jdom.Document makeDocument14()>();
        document = temp$0;
        temp$1 = new org.jdom.output.XMLOutputter;
        specialinvoke temp$1.<org.jdom.output.XMLOutputter: void <init>()>();
        outputter = temp$1;
        virtualinvoke outputter.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>(document, output);
        return;
    }

    public void saveBottomUp(java.io.OutputStream) throws java.io.IOException
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        java.io.OutputStream output;
        org.jdom.Document document, temp$0;
        org.jdom.output.XMLOutputter outputter, temp$1;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        output := @parameter0: java.io.OutputStream;
        temp$0 = virtualinvoke this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: org.jdom.Document makeDocumentBottomUp()>();
        document = temp$0;
        temp$1 = new org.jdom.output.XMLOutputter;
        specialinvoke temp$1.<org.jdom.output.XMLOutputter: void <init>()>();
        outputter = temp$1;
        virtualinvoke outputter.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>(document, output);
        return;
    }

    public org.jdom.Document makeDocument()
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        org.jdom.Document doc, temp$0, temp$2;
        org.jdom.Element root, temp$1, px, temp$7, namex, temp$8, temp$10, temp$12, agex, temp$13, temp$17, temp$19, temp$20;
        java.util.List temp$3;
        java.util.Iterator temp$4;
        de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person p;
        boolean temp$5;
        java.lang.Object temp$6;
        java.lang.String temp$9, temp$16;
        java.io.PrintStream temp$11, temp$18;
        java.lang.Integer temp$14;
        int temp$15;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        temp$0 = new org.jdom.Document;
        specialinvoke temp$0.<org.jdom.Document: void <init>()>();
        doc = temp$0;
        temp$1 = new org.jdom.Element;
        specialinvoke temp$1.<org.jdom.Element: void <init>(java.lang.String)>("contacts");
        root = temp$1;
        temp$2 = virtualinvoke doc.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(root);
        temp$3 = this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: java.util.List contacts>;
        temp$4 = interfaceinvoke temp$3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label0:
        nop;
        temp$5 = interfaceinvoke temp$4.<java.util.Iterator: boolean hasNext()>();
        if temp$5 == 0 goto label1;

        temp$6 = interfaceinvoke temp$4.<java.util.Iterator: java.lang.Object next()>();
        p = (de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person) temp$6;
        temp$7 = new org.jdom.Element;
        specialinvoke temp$7.<org.jdom.Element: void <init>(java.lang.String)>("person");
        px = temp$7;
        temp$8 = new org.jdom.Element;
        specialinvoke temp$8.<org.jdom.Element: void <init>(java.lang.String)>("name");
        namex = temp$8;
        temp$9 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: java.lang.String getName()>();
        temp$10 = virtualinvoke namex.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$9);
        namex = temp$10;
        temp$11 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$11.<java.io.PrintStream: void println(java.lang.Object)>(namex);
        temp$12 = virtualinvoke px.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(namex);
        px = temp$12;
        temp$13 = new org.jdom.Element;
        specialinvoke temp$13.<org.jdom.Element: void <init>(java.lang.String)>("age");
        agex = temp$13;
        temp$14 = new java.lang.Integer;
        temp$15 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: int getAge()>();
        specialinvoke temp$14.<java.lang.Integer: void <init>(int)>(temp$15);
        temp$16 = virtualinvoke temp$14.<java.lang.Integer: java.lang.String toString()>();
        temp$17 = virtualinvoke agex.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$16);
        agex = temp$17;
        temp$18 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$18.<java.io.PrintStream: void println(java.lang.Object)>(agex);
        temp$19 = virtualinvoke px.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(agex);
        px = temp$19;
        temp$20 = virtualinvoke root.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(px);
        nop;
        goto label0;

     label1:
        nop;
        return doc;
    }

    public org.jdom.Document makeDocumentTopDown()
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        org.jdom.Document document, temp$0, temp$2;
        org.jdom.Element root, temp$1, person, temp$7, name, temp$8, temp$10, temp$11, age, temp$12, temp$16, temp$17, temp$18;
        java.util.List temp$3;
        java.util.Iterator temp$4;
        de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person p;
        boolean temp$5;
        java.lang.Object temp$6;
        java.lang.String temp$9, temp$15;
        java.lang.Integer temp$13;
        int temp$14;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        temp$0 = new org.jdom.Document;
        specialinvoke temp$0.<org.jdom.Document: void <init>()>();
        document = temp$0;
        temp$1 = new org.jdom.Element;
        specialinvoke temp$1.<org.jdom.Element: void <init>(java.lang.String)>("contacts");
        root = temp$1;
        temp$2 = virtualinvoke document.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(root);
        document = temp$2;
        temp$3 = this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: java.util.List contacts>;
        temp$4 = interfaceinvoke temp$3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label0:
        nop;
        temp$5 = interfaceinvoke temp$4.<java.util.Iterator: boolean hasNext()>();
        if temp$5 == 0 goto label1;

        temp$6 = interfaceinvoke temp$4.<java.util.Iterator: java.lang.Object next()>();
        p = (de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person) temp$6;
        temp$7 = new org.jdom.Element;
        specialinvoke temp$7.<org.jdom.Element: void <init>(java.lang.String)>("person");
        person = temp$7;
        temp$8 = new org.jdom.Element;
        specialinvoke temp$8.<org.jdom.Element: void <init>(java.lang.String)>("name");
        name = temp$8;
        temp$9 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: java.lang.String getName()>();
        temp$10 = virtualinvoke name.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$9);
        name = temp$10;
        temp$11 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(name);
        person = temp$11;
        temp$12 = new org.jdom.Element;
        specialinvoke temp$12.<org.jdom.Element: void <init>(java.lang.String)>("age");
        age = temp$12;
        temp$13 = new java.lang.Integer;
        temp$14 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: int getAge()>();
        specialinvoke temp$13.<java.lang.Integer: void <init>(int)>(temp$14);
        temp$15 = virtualinvoke temp$13.<java.lang.Integer: java.lang.String toString()>();
        temp$16 = virtualinvoke age.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$15);
        age = temp$16;
        temp$17 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(age);
        person = temp$17;
        temp$18 = virtualinvoke root.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(person);
        nop;
        goto label0;

     label1:
        nop;
        return document;
    }

    public org.jdom.Document makeDocumentBottomUp()
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        org.jdom.Element root, temp$0, name, temp$5, temp$7, age, temp$8, temp$12, person, temp$13, temp$14, temp$15, temp$16;
        java.util.List temp$1;
        java.util.Iterator temp$2;
        de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person p;
        boolean temp$3;
        java.lang.Object temp$4;
        java.lang.String temp$6, temp$11;
        java.lang.Integer temp$9;
        int temp$10;
        org.jdom.Document document, temp$17, temp$18;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        temp$0 = new org.jdom.Element;
        specialinvoke temp$0.<org.jdom.Element: void <init>(java.lang.String)>("contacts");
        root = temp$0;
        temp$1 = this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: java.util.List contacts>;
        temp$2 = interfaceinvoke temp$1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label0:
        nop;
        temp$3 = interfaceinvoke temp$2.<java.util.Iterator: boolean hasNext()>();
        if temp$3 == 0 goto label1;

        temp$4 = interfaceinvoke temp$2.<java.util.Iterator: java.lang.Object next()>();
        p = (de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person) temp$4;
        temp$5 = new org.jdom.Element;
        specialinvoke temp$5.<org.jdom.Element: void <init>(java.lang.String)>("name");
        name = temp$5;
        temp$6 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: java.lang.String getName()>();
        temp$7 = virtualinvoke name.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$6);
        name = temp$7;
        temp$8 = new org.jdom.Element;
        specialinvoke temp$8.<org.jdom.Element: void <init>(java.lang.String)>("age");
        age = temp$8;
        temp$9 = new java.lang.Integer;
        temp$10 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: int getAge()>();
        specialinvoke temp$9.<java.lang.Integer: void <init>(int)>(temp$10);
        temp$11 = virtualinvoke temp$9.<java.lang.Integer: java.lang.String toString()>();
        temp$12 = virtualinvoke age.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$11);
        age = temp$12;
        temp$13 = new org.jdom.Element;
        specialinvoke temp$13.<org.jdom.Element: void <init>(java.lang.String)>("person");
        person = temp$13;
        temp$14 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(name);
        person = temp$14;
        temp$15 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(age);
        person = temp$15;
        temp$16 = virtualinvoke root.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(person);
        nop;
        goto label0;

     label1:
        nop;
        temp$17 = new org.jdom.Document;
        specialinvoke temp$17.<org.jdom.Document: void <init>()>();
        document = temp$17;
        temp$18 = virtualinvoke document.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(root);
        document = temp$18;
        return document;
    }

    public org.jdom.Document makeDocument14()
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        org.jdom.Document document, temp$0, temp$2;
        org.jdom.Element root, temp$1, person, temp$8, name, temp$9, temp$11, temp$12, age, temp$13, temp$17, temp$18, temp$19;
        java.util.Iterator iter, temp$4, temp$5;
        java.util.List temp$3;
        boolean temp$6;
        de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person p;
        java.lang.Object temp$7;
        java.lang.String temp$10, temp$16;
        java.lang.Integer temp$14;
        int temp$15;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        temp$0 = new org.jdom.Document;
        specialinvoke temp$0.<org.jdom.Document: void <init>()>();
        document = temp$0;
        temp$1 = new org.jdom.Element;
        specialinvoke temp$1.<org.jdom.Element: void <init>(java.lang.String)>("contacts");
        root = temp$1;
        temp$2 = virtualinvoke document.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(root);
        temp$3 = this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: java.util.List contacts>;
        temp$4 = interfaceinvoke temp$3.<java.util.List: java.util.Iterator iterator()>();
        temp$5 = (java.util.Iterator) temp$4;
        iter = temp$5;

     label0:
        nop;
        temp$6 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if temp$6 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$7 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        p = (de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person) temp$7;
        temp$8 = new org.jdom.Element;
        specialinvoke temp$8.<org.jdom.Element: void <init>(java.lang.String)>("person");
        person = temp$8;
        temp$9 = new org.jdom.Element;
        specialinvoke temp$9.<org.jdom.Element: void <init>(java.lang.String)>("name");
        name = temp$9;
        temp$10 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: java.lang.String getName()>();
        temp$11 = virtualinvoke name.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$10);
        temp$12 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(name);
        temp$13 = new org.jdom.Element;
        specialinvoke temp$13.<org.jdom.Element: void <init>(java.lang.String)>("age");
        age = temp$13;
        temp$14 = new java.lang.Integer;
        temp$15 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: int getAge()>();
        specialinvoke temp$14.<java.lang.Integer: void <init>(int)>(temp$15);
        temp$16 = virtualinvoke temp$14.<java.lang.Integer: java.lang.String toString()>();
        temp$17 = virtualinvoke age.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$16);
        temp$18 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(age);
        temp$19 = virtualinvoke root.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(person);
        goto label0;

     label2:
        nop;
        return document;
    }

    public org.jdom.Document makeDocument_addContentsAtEnd()
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        org.jdom.Document document, temp$0, temp$2;
        org.jdom.Element root, temp$1, person, temp$7, name, temp$8, age, temp$9, temp$11, temp$15, temp$16, temp$17, temp$18;
        java.util.List temp$3;
        java.util.Iterator temp$4;
        de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person p;
        boolean temp$5;
        java.lang.Object temp$6;
        java.lang.String temp$10, temp$14;
        java.lang.Integer temp$12;
        int temp$13;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        temp$0 = new org.jdom.Document;
        specialinvoke temp$0.<org.jdom.Document: void <init>()>();
        document = temp$0;
        temp$1 = new org.jdom.Element;
        specialinvoke temp$1.<org.jdom.Element: void <init>(java.lang.String)>("contacts");
        root = temp$1;
        temp$2 = virtualinvoke document.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(root);
        temp$3 = this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: java.util.List contacts>;
        temp$4 = interfaceinvoke temp$3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label0:
        nop;
        temp$5 = interfaceinvoke temp$4.<java.util.Iterator: boolean hasNext()>();
        if temp$5 == 0 goto label1;

        temp$6 = interfaceinvoke temp$4.<java.util.Iterator: java.lang.Object next()>();
        p = (de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person) temp$6;
        temp$7 = new org.jdom.Element;
        specialinvoke temp$7.<org.jdom.Element: void <init>(java.lang.String)>("person");
        person = temp$7;
        temp$8 = new org.jdom.Element;
        specialinvoke temp$8.<org.jdom.Element: void <init>(java.lang.String)>("name");
        name = temp$8;
        temp$9 = new org.jdom.Element;
        specialinvoke temp$9.<org.jdom.Element: void <init>(java.lang.String)>("age");
        age = temp$9;
        temp$10 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: java.lang.String getName()>();
        temp$11 = virtualinvoke name.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$10);
        temp$12 = new java.lang.Integer;
        temp$13 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: int getAge()>();
        specialinvoke temp$12.<java.lang.Integer: void <init>(int)>(temp$13);
        temp$14 = virtualinvoke temp$12.<java.lang.Integer: java.lang.String toString()>();
        temp$15 = virtualinvoke age.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$14);
        temp$16 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(name);
        temp$17 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(age);
        temp$18 = virtualinvoke root.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(person);
        nop;
        goto label0;

     label1:
        nop;
        return document;
    }

    public org.jdom.Document makeDocument_newDocumentAtEnd()
    {
        de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM this;
        org.jdom.Element root, temp$0, person, temp$5, name, temp$6, age, temp$7, temp$9, temp$13, temp$14, temp$15, temp$16;
        java.util.List temp$1;
        java.util.Iterator temp$2;
        de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person p;
        boolean temp$3;
        java.lang.Object temp$4;
        java.lang.String temp$8, temp$12;
        java.lang.Integer temp$10;
        int temp$11;
        org.jdom.Document document, temp$17, temp$18;

        this := @this: de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM;
        temp$0 = new org.jdom.Element;
        specialinvoke temp$0.<org.jdom.Element: void <init>(java.lang.String)>("contacts");
        root = temp$0;
        temp$1 = this.<de.uni_koblenz.using_xml_apis.jdom.ContactsToDocumentUsingJDOM: java.util.List contacts>;
        temp$2 = interfaceinvoke temp$1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label0:
        nop;
        temp$3 = interfaceinvoke temp$2.<java.util.Iterator: boolean hasNext()>();
        if temp$3 == 0 goto label1;

        temp$4 = interfaceinvoke temp$2.<java.util.Iterator: java.lang.Object next()>();
        p = (de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person) temp$4;
        temp$5 = new org.jdom.Element;
        specialinvoke temp$5.<org.jdom.Element: void <init>(java.lang.String)>("person");
        person = temp$5;
        temp$6 = new org.jdom.Element;
        specialinvoke temp$6.<org.jdom.Element: void <init>(java.lang.String)>("name");
        name = temp$6;
        temp$7 = new org.jdom.Element;
        specialinvoke temp$7.<org.jdom.Element: void <init>(java.lang.String)>("age");
        age = temp$7;
        temp$8 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: java.lang.String getName()>();
        temp$9 = virtualinvoke name.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$8);
        temp$10 = new java.lang.Integer;
        temp$11 = virtualinvoke p.<de.uni_koblenz.using_xml_apis.scenarios.xo_mapping.Person: int getAge()>();
        specialinvoke temp$10.<java.lang.Integer: void <init>(int)>(temp$11);
        temp$12 = virtualinvoke temp$10.<java.lang.Integer: java.lang.String toString()>();
        temp$13 = virtualinvoke age.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(temp$12);
        temp$14 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(name);
        temp$15 = virtualinvoke person.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(age);
        temp$16 = virtualinvoke root.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(person);
        nop;
        goto label0;

     label1:
        nop;
        temp$17 = new org.jdom.Document;
        specialinvoke temp$17.<org.jdom.Document: void <init>()>();
        document = temp$17;
        temp$18 = virtualinvoke document.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(root);
        return document;
    }
}
