"xom.nu", "org.jdom", "Status", "Strategy", "Pre", "Post", "Throws", "Invariant", "Doc"
"Attribute#hashCode()", "Attribute#hashCode()", "3", "1", "", "", "", "", ""
"Attribute#equals(Object)", "Attribute#equals(Object)", "3", "1", "", "", "", "", ""
"Attribute#getValue()", "Attribute#getValue()", "3", "1", "", "", "", "", ""
"Attribute#getParent()", "Attribute#getParent()", "3", "1", "", "", "", "", ""
"Attribute#copy()", "Attribute#clone()", "3", "1", "", "", "", "", ""
"Attribute#getType()", "Attribute#getAttributeType()", "3", "2", "", "", "", "", ""
"Attribute#setValue(String)", "Attribute#setValue()", "3", "1", "", "", "", "", ""
"Attribute#query(String)", "xpath.XPath#selectNodes(Object)", "2", "2", "", "", "", "", ""
"Attribute#query(String, XPathContext)", "xpath.XPath#selectNodes(Object)", "3", "2", "", "", "", "", ""
"Attribute#toXML()", "", "2", "4", "", "JDOM's escaping is different from XOM's", "", "", ""
"Attribute#getLocalName()", "Attribute#getName()", "3", "1", "", "", "", "", ""
"Attribute#getNamespacePrefix()", "Attribute#getNamespacePrefix()", "3", "1", "", "", "", "", ""
"Attribute#getNamespaceURI()", "Attribute#getNamespaceURI()", "3", "1", "", "", "", "", ""
"Attribute#getQualifiedName()", "Attribute#getQualifiedName()", "3", "1", "", "", "", "", ""
"Attribute#setLocalName(String)", "Attribute#setName()", "3", "1", "", "", "", "", ""
"Attribute#setNamespace(String, String)", "Attribute#setNamespace(Namespace)", "3", "2", "", "", "xom throws NamespaceConflictException (not IllegalNameException)", "", ""
"Attribute#setType(Type)", "Attribute#setAttributeType(int)", "3", "2", "", "", "XOM Attribute.Type can be null, but not outof bounds as in JDOM (which throws IllegalDataException", "", ""
"Attribute#detach()", "Attribute#detach()", "3", "1", "", "", "", "", ""
"Attribute#getBaseURI()", "", "3", "3", "", "", "", "", ""
"Attribute#getDocument()", "Attribute#getDocument()", "3", "1", "", "", "", "", ""
"Attribute(Attribute)", "Attribute#clone()", "3", "1", "", "", "", "", ""
"Attribute(String, String)", "Attribute(String, String)", "3", "2", "XOM allows colonized names in the first argument whereas JDOM does not", "", "", "", "XOM docs say first arg is localName, however, tests send colonized names"
"Attribute(String, String, String)", "Attribute(String, String, Namespace)", "3", "2", "XOM allows colons in names, JDOM does not", "", "NamespaceConflictException is not thrown by JDOM", "", ""
"Attribute(String, String, String, Type)", "Attribute(String, String, int, Namespace)", "3", "2", "XOM allows colons in names, JDOM does not", "", "NamespaceConflictException is not thrown by JDOM", "", ""
"Attribute(String, String, Type)", "Attribute(String, String, int)", "3", "1", "", "", "", "", ""
"Builder#build(String)", "input.SAXBuilder#build(String)", "2", "2", "", "", "JDOMException can be thrown without being a JDOMParseException", "", ""
"Builder#build(InputStream, String)", "input.SAXBuilder#build(InputStream, String)", "2", "2", "", "", "JDOMException can be thrown without being a JDOMParseException", "", ""
"Builder#build(File)", "input.SAXBuilder#build(File)", "2", "2", "", "", "JDOMException can be thrown without being a JDOMParseException", "", ""
"Builder#build(Reader)", "input.SAXBuilder#build(Reader)", "2", "2", "", "", "JDOMException can be thrown without being a JDOMParseException", "", ""
"Builder#build(Reader, String)", "input.SAXBuilder#build(Reader, String)", "2", "2", "", "", "JDOMException can be thrown without being a JDOMParseException", "", ""
"Builder#build(String, String)", "input.SAXBuilder#build(String, String)", "2", "2", "", "", "JDOMException can be thrown without being a JDOMParseException", "", ""
"Builder#build(InputStream)", "input.SAXBuilder#build(InputStream)", "2", "2", "", "", "JDOMException can be thrown without being a JDOMParseException", "", ""
"Builder#getNodeFactory()", "", "1", "", "", "No NodeFactory available since it does not work with SAXBuilder", "", "", ""
"Builder(XMLReader, boolean, NodeFactory)", "", "1", "", "NodeFactory is not available in JDOM and cannot be used by SAXBuilder", "", "", "", ""
"Builder()", "input.SAXBuilder()", "2", "2", "", "", "", "", ""
"Builder(boolean)", "input.SAXBuilder(boolean)", "2", "2", "", "", "", "", ""
"Builder(boolean, NodeFactory)", "", "1", "", "NodeFactory is not available in JDOM and cannot be used by SAXBuilder", "", "", "", ""
"Builder(NodeFactory)", "", "1", "", "NodeFactory is not available in JDOM and cannot be used by SAXBuilder", "", "", "", ""
"Builder(XMLReader)", "input.SAXBuilder(String)", "2", "2", "Not sure if XMLReader.class can function as a SAX driver", "", "", "", ""
"Builder(XMLReader, boolean)", "input.SAXBuilder(String, boolean)", "2", "2", "Not sure if XMLReader.class can function as a SAX driver", "", "", "", ""
"Comment#getValue()", "Comment#getValue()", "3", "1", "", "", "", "", ""
"Comment#getParent()", "Comment#getParent()", "3", "1", "", "", "", "", ""
"Comment#copy()", "Comment#clone()", "3", "1", "", "", "", "", ""
"Comment#setValue(String)", "Comment#setText(String)", "3", "2", "data may be null in XOM", "", "", "", ""
"Comment#query(String, XPathContext)", "xpath.XPath#selectNodes(Object)", "3", "3", "", "", "", "", ""
"Comment#query(String)", "xpath.XPath#selectNodes(Object)", "3", "3", "", "", "", "", ""
"Comment#toXML()", "output.XMLOutputter#outputString(Comment)", "1", "1", "", "the resulting string may be slightly different", "", "", ""
"Comment#detach()", "Comment#detach()", "3", "1", "", "", "", "", ""
"Comment#getBaseURI()", "", "3", "3", "", "", "", "", ""
"Comment#getDocument()", "Comment#getDocument()", "3", "1", "", "", "", "", ""
"Comment(Comment)", "Comment#clone()", "3", "1", "", "", "", "", ""
"Comment(String)", "Comment(String)", "3", "2", "XOM is more picky about invalid chars in comment data", "", "", "", ""
"DocType#toString()", "", "1", "4", "", "", "", "", ""
"DocType#getValue()", "DocType#getValue()", "3", "1", "", "", "", "", ""
"DocType#getParent()", "DocType#getParent()", "3", "1", "", "", "", "", ""
"DocType#copy()", "DocType#clone()", "3", "1", "", "", "", "", ""
"DocType#query(String)", "xpath.XPath#selectNodes(Object)", "3", "2", "", "", "", "", ""
"DocType#query(String, XPathContext)", "xpath.XPath#selectNodes(Object)", "3", "2", "", "", "", "", ""
"DocType#toXML()", "output.XMLOutputter#outputString(OutputType)", "1", "1", "", "output may differ slightly", "", "", ""
"DocType#detach()", "DocType#detach()", "3", "1", "", "", "", "", ""
"DocType#getBaseURI()", "", "3", "3", "", "", "", "", ""
"DocType#getDocument()", "DocType#getDocument()", "3", "1", "", "", "", "", ""
"DocType#getInternalDTDSubset()", "DocType#getInternalSubset()", "3", "1", "", "", "", "", ""
"DocType#getPublicID()", "DocType#getPublicID()", "3", "1", "", "", "", "", ""
"DocType#getRootElementName()", "DocType#getElementName()", "3", "1", "", "", "", "", ""
"DocType#getSystemID()", "DocType#getSystemID()", "3", "1", "", "", "", "", ""
"DocType#setInternalDTDSubset(String)", "DocType#setInternalSubset(String)", "2", "1", "XOM parses the InternalSubset string and throws accordingly", "", "", "", ""
"DocType#setPublicID(String)", "DocType#setPublicID(String)", "2", "2", "Xom checks for invalid characters", "", "", "", ""
"DocType#setRootElementName(String)", "DocType#setElementName(String)", "2", "2", "XOM checks for more invalid chars in rootElementNames ", "", "", "", ""
"DocType#setSystemID(String)", "DocType#setSystemId(String)", "2", "2", "XOM checks for invalid chars", "", "", "XOM requires that Public ID has been nulled before SystemID can be", ""
"DocType(DocType)", "DocType#clone()", "3", "1", "", "", "", "", ""
"DocType(String)", "DocType(String)", "2", "2", "XOM does a lot more input validation on rootElementName", "", "for some invalid names (starting with digits) jdom *does* throw", "", ""
"DocType(String, String)", "DocType(String, String)", "2", "2", "XOM does a lot more input validation on rootElementName etc.", "", "", "", ""
"DocType(String, String, String)", "DocType(String, String, String)", "2", "2", "XOM does a lot more input validation on rootElementName etc.", "", "", "", ""
"Document#hashCode()", "Document#hashCode()", "1", "1", "", "", "", "", ""
"Document#indexOf(Node)", "Document#indexOf(Content)", "3", "1", "", "", "", "", ""
"Document#equals(Object)", "Document#equals(Object)", "3", "1", "", "", "", "", ""
"Document#getValue()", "", "3", "3", "", "", "", "", ""
"Document#getParent()", "Document#getParent()", "3", "1", "", "", "", "", ""
"Document#copy()", "Document#clone()", "3", "1", "", "", "", "", ""
"Document#query(String)", "xpath.XPath#selectNodes(Object)", "3", "2", "", "", "", "", ""
"Document#query(String, XPathContext)", "xpath.XPath#selectNodes(Object)", "3", "2", "", "", "", "", ""
"Document#toXML()", "output.XMLOutputter#outputString(Document)", "1", "1", "", "the resulting String may be slightly different", "", "", ""
"Document#detach()", "", "3", "4", "", "", "", "", ""
"Document#getBaseURI()", "Document#getBaseURI()", "3", "2", "", "", "", "", ""
"Document#getDocument()", "Document#getDocument()", "3", "1", "", "", "", "", ""
"Document#getChild(int)", "Document#getContent(int)", "3", "1", "", "", "", "", ""
"Document#getChildCount()", "Document#getContentSize()", "3", "1", "", "", "", "", ""
"Document#appendChild(Node)", "Document#addContent(Content)", "3", "2", "XOM disallows null and Text nodes", "", "special exception for multiple parent situation", "", ""
"Document#removeChild(int)", "Document#removeContent(int)", "3", "2", "XOM prevents root element to be removed", "", "", "", ""
"Document#removeChild(Node)", "Document#removeChild(Content)", "3", "2", "XOM disallows root removal; throws if child is not a child of this document", "", "", "", ""
"Document#replaceChild(Node, Node)", "", "3", "3", "xom requires that newchild is an element if oldchild is", "", "xom has a special exception for multiple parent situation", "", ""
"Document#setBaseURI(String)", "Document#setBaseURI(String)", "3", "1", "", "", "", "", ""
"Document#insertChild(Node, int)", "Document#addContent(int, Content)", "3", "1", "", "", "", "", ""
"Document#getRootElement()", "Document#getRootElement()", "3", "1", "", "", "", "", ""
"Document#getDocType()", "Document#getDocType()", "3", "1", "", "", "", "", ""
"Document#setDocType(DocType)", "Document#setDocType(DocType)", "3", "2", "xom allows a doctype to be already attached if it is attached to this document but does not allow null", "", "special exception for multiple parent issue", "", ""
"Document#setRootElement(Element)", "Document#setRootElement(Element)", "3", "2", "xom allows a root to be already attached if it is attached to this document but does not allow null", "", "special exception for multiple parent issue", "", ""
"Document(Document)", "Document#clone()", "3", "1", "", "", "", "", ""
"Document(Element)", "Document(Element)", "3", "1", "", "", "", "", ""
"Element#hashCode()", "Element#hashCode()", "1", "", "", "", "", "", ""
"Element#indexOf(Node)", "Element#indexOf(Content)", "3", "1", "", "", "", "", ""
"Element#equals(Object)", "Element#equals(Object)", "3", "1", "", "", "", "", ""
"Element#getValue()", "Element#getValue()", "3", "1", "", "", "", "", ""
"Element#getParent()", "Element#getParent()", "3", "1", "", "", "", "", ""
"Element#copy()", "Element#clone()", "3", "1", "", "", "", "", ""
"Element#query(String)", "xpath.XPath#selectNodes(Object)", "3", "2", "", "", "", "", ""
"Element#query(String, XPathContext)", "xpath.XPath#selectNodes(Object)", "3", "2", "", "", "", "", ""
"Element#toXML()", "output.XMLOutputter#outputString(Element)", "1", "1", "", "the resulting string may be slightly different", "", "", ""
"Element#getLocalName()", "Element#getName()", "3", "1", "", "", "", "", ""
"Element#getNamespacePrefix()", "Element#getNamespacePrefix", "3", "1", "", "", "", "", ""
"Element#getNamespacePrefix(int)", "", "1", "3", "", "result is undefined since XOM includes the element's own namespace", "", "", ""
"Element#getNamespaceURI(String)", "", "3", "3", "", "", "", "", ""
"Element#getNamespaceURI()", "Element#getNamespaceURI()", "3", "1", "", "", "", "", ""
"Element#getQualifiedName()", "Element#getQualifiedName()", "3", "1", "", "", "", "", ""
"Element#setLocalName(String)", "Element#setName(String)", "3", "1", "", "", "", "", ""
"Element#detach()", "Element#detach()", "3", "2", "in XOM this element must not be a root of a document", "", "", "root must remain attached", ""
"Element#getBaseURI()", "", "2", "4", "", "in XOM the result is absolutized and/or converted from IRI to URI", "", "", ""
"Element#getDocument()", "Element#getDocument()", "3", "1", "", "", "", "", ""
"Element#getChild(int)", "Element#getContent(int)", "3", "1", "", "", "", "", ""
"Element#getChildCount()", "getContentSize()", "3", "1", "", "", "", "", ""
"Element#addAttribute(Attribute)", "Element#setAttribute()", "3", "2", "", "", "XOM throws MultipleParentException if argument is parented whereas JDOM throws IllegalAddException", "", ""
"Element#getAttribute(String)", "Element#getAttribute(String)", "3", "1", "", "", "", "", ""
"Element#getAttribute(int)", "", "3", "3", "", "", "", "", ""
"Element#getAttribute(String, String)", "Element#getAttribute(String, Namespace)", "3", "2", "", "", "XOM returns null where jdom throws on illegal attr name", "", ""
"Element#appendChild(Node)", "Element#addContent(Content)", "3", "1", "", "", "", "", ""
"Element#appendChild(String)", "Element#addContent(String)", "3", "1", "", "", "", "", ""
"Element#removeChild(int)", "Element#removeContent(int)", "3", "1", "", "", "", "", ""
"Element#removeChild(Node)", "Element@removeContent(Content)", "3", "2", "child must be a child of this element; jdom silently continues if not so", "", "", "", ""
"Element#replaceChild(Node, Node)", "", "3", "3", "", "", "", "", ""
"Element#setBaseURI(String)", "", "2", "4", "xom agressively checks uri for well-formedness and throws accordingly", "", "", "", ""
"Element#insertChild(Node, int)", "Element(int, Content)", "3", "2", "", "", "XOM throws NullPointerException where considers null to be an IllegalName", "", ""
"Element#insertChild(String, int)", "Element#addContent(int, Text)", "3", "2", "", "", "", "", ""
"Element#removeAttribute(Attribute)", "Element#removeAttribute(Attribute)", "3", "2", "jdom just returns false if it could not remove the attribute; XOM throws", "", "", "", ""
"Element#addNamespaceDeclaration(String, String)", "Element#addNamespaceDeclaration(Namespace)", "3", "2", "", "", "XOM throws NamespaceConflictException vs. IllegalAddException in jdom", "", ""
"Element#getAttributeCount()", "", "3", "3", "", "", "", "", ""
"Element#getAttributeValue(String)", "Element#getAttributeValue(String)", "3", "1", "", "", "", "", ""
"Element#getAttributeValue(String, String)", "Element#getAttributeValue(String, Namespace", "3", "2", "", "", "XOM returns null where jdom throws on illegal attr name", "", ""
"Element#getChildElements(String)", "Element#getChildren(String)", "3", "1", "", "", "", "", ""
"Element#getChildElements()", "Element#getChildren()", "3", "1", "", "", "", "", ""
"Element#getChildElements(String, String)", "Element#getChildren(String, Namespace)", "3", "2", "", "", "", "", ""
"Element#getFirstChildElement(String, String)", "", "3", "3", "", "", "", "", ""
"Element#getFirstChildElement(String)", "", "3", "3", "", "", "", "", ""
"Element#getNamespaceDeclarationCount()", "", "2", "3", "", "TODO: check if result differs because of "additional"", "", "", ""
"Element#removeChildren()", "Element#removeContent()", "3", "1", "", "", "", "", ""
"Element#removeNamespaceDeclaration(String)", "Element#removeNamespaceDeclaration(Namespace)", "3", "2", "", "", "", "", ""
"Element#setNamespacePrefix(String)", "", "2", "3", "XOM does more analysis on whether a call to this method is valid", "", "", "", ""
"Element#setNamespaceURI(String)", "", "2", "3", "XOM does more analysis on whether a call to this method is valid", "", "", "", ""
"Element(Element)", "Element#clone()", "3", "1", "", "", "", "", ""
"Element(String)", "Element(String)", "3", "2", "XOM allows prefixed names where jdom does not", "", "XOM throws NullPointerException where considers null to be an IllegalName", "", ""
"Element(String, String)", "Element(String, String, String)", "3", "2", "XOM allows prefixed names where jdom does not", "", "XOM throws NullPointerException where considers null to be an IllegalName", "", ""
"Elements#get(int)", "java.util.List#get(int)", "3", "1", "", "", "", "", ""
"Elements#size()", "java.util.List#size()", "3", "1", "", "", "", "", ""
"Node#getChild(int)", "", "3", "4", "", "", "", "", ""
"Node#getChildCount()", "", "3", "4", "", "", "", "", ""
"Nodes#append(Node)", "java.util.List#add(Object)", "3", "1", "", "", "", "", ""
"Nodes#contains(Node)", "java.util.List#contains(Object)", "3", "1", "", "", "", "", ""
"Nodes#get(int)", "java.util.List#get(int)", "3", "1", "", "", "", "", ""
"Nodes#size()", "java.util.List#size()", "3", "1", "", "", "", "", ""
"Nodes#remove(int)", "java.util.List#remove(int)", "3", "1", "", "", "", "", ""
"Nodes#insert(Node, int)", "java.util.List#add(int, Object)", "3", "1", "", "", "", "", ""
"Nodes()", "java.util.Collections.emptyList()", "3", "3", "", "", "", "", ""
"Nodes(Element)", "java.util.Collections.singletonList(Object)", "3", "3", "", "", "", "", ""
"ParentNode#indexOf(Node)", "Parent#indexOf(Content)", "1", "O", "", "", "", "", ""
"ParentNode#appendChild(Node)", "", "1", "O", "", "", "", "", ""
"ParentNode#removeChild(Node)", "Parent#removeContent(Content)", "1", "O", "", "", "", "", ""
"ParentNode#removeChild(int)", "Parent#removeContent(int)", "1", "O", "", "", "", "", ""
"ParentNode#replaceChild(Node, Node)", "", "1", "O", "", "", "", "", ""
"ParentNode#setBaseURI(String)", "", "1", "O", "", "", "", "", ""
"ParentNode#insertChild(Node, int)", "", "1", "O", "", "", "", "", ""
"ProcessingInstruction#getValue()", "ProcessingInstruction#getValue()", "3", "1", "", "", "", "", ""
"ProcessingInstruction#getParent()", "ProcessingInstruction#getParent()", "3", "1", "", "", "", "", ""
"ProcessingInstruction#copy()", "ProcessingInstruction#clone()", "3", "1", "", "", "", "", ""
"ProcessingInstruction#setValue(String)", "ProcessingInstruction#setData(String)", "3", "1", "", "", "", "", ""
"ProcessingInstruction#query(String, XPathContext)", "xpath.XPath#selectNodes(Object)", "2", "3", "", "", "", "", ""
"ProcessingInstruction#query(String)", "xpath.XPath#selectNodes(Object)", "2", "3", "", "", "", "", ""
"ProcessingInstruction#toXML()", "output.XMLOutputter#outputString(ProcessingInstruction)", "1", "1", "", "", "", "", ""
"ProcessingInstruction#detach()", "ProcessingInstruction#detach()", "3", "1", "", "", "", "", ""
"ProcessingInstruction#getBaseURI()", "", "3", "1", "", "", "", "", ""
"ProcessingInstruction#getDocument()", "ProcessingInstruction#getDocument()", "3", "1", "", "", "", "", ""
"ProcessingInstruction#getTarget()", "ProcessingInstruction#getTarget()", "3", "1", "", "", "", "", ""
"ProcessingInstruction#setTarget(String)", "ProcessingInstruction#setTarget(String)", "3", "1", "", "", "", "", ""
"ProcessingInstruction(ProcessingInstruction)", "ProcessingInstruction#clone()", "3", "1", "", "", "", "", ""
"ProcessingInstruction(String, String)", "ProcessingInstruction(String, String)", "3", "1", "", "", "", "", ""
"Text#getValue()", "Text#getText();CDATA#getValue()", "3", "2", "", "", "", "", ""
"Text#getParent()", "Text#getParent();CDATA#getParent()", "3", "2", "", "", "", "", ""
"Text#copy()", "Text#clone();CDATA#clone()", "3", "2", "", "", "", "", ""
"Text#setValue(String)", "Text#setText(String)", "3", "1", "", "", "", "", ""
"Text#query(String, XPathContext)", "xpath.XPath#selectNodes(Object)", "3", "2", "", "", "", "", ""
"Text#query(String)", "xpath.XPath#selectNodes(Object)", "3", "2", "", "", "", "", ""
"Text#toXML()", "output.XMLOutputter#outputString(Text)", "1", "1", "", "result may differ slightly", "", "", ""
"Text#detach()", "Text#detach();CDATA#detach()", "3", "2", "", "", "", "", ""
"Text#getBaseURI()", "", "3", "3", "", "", "", "", ""
"Text#getDocument()", "Text#getDocument();CDATA#getDocument()", "3", "2", "", "", "", "", ""
"Text(String)", "Text(String)", "3", "1", "", "", "", "", ""
"Text(Text)", "Text#clone()", "3", "1", "", "", "", "", ""
