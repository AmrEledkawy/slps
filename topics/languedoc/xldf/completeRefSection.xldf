<?xml version="1.0" encoding="utf-8"?>
<xldf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf"
  xmlns:xldf="http://planet-sl.org/xldf"
  xmlns:ldf="http://planet-sl.org/ldf">

  <!-- compose a section on refactoring transformations -->
  <xldf:rename>
    <from>
      <title>refactoringtransformation</title>
    </from>
    <to>Other refactoring transformations</to>
  </xldf:rename>
  <xldf:place>
    <section>element-massage</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>

  <xldf:insert>
    <after>
      <text>
        There are two expression arguments: one to be matched, and another one that
        replaces the matched expression. One of them must be in a `massage relation' to
        the other.
      </text>
    </after>
    <content>
      <text>
        The massage relation is defined as follows. First of all, a choice of any two
        symbols with EBNF modifiers can be refactored to a single modifier according to
        the table below:
      </text>
      <table>
        <header>
          <cell>
            <empty/>
          </cell>
          <cell>
            <formula>\varepsilon</formula>
          </cell>
          <cell>
            <formula>x</formula>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </header>
        <row>
          <cell>
            <formula>\varepsilon</formula>
          </cell>
          <cell>
            <empty/>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
        <row>
          <cell>
            <formula>x</formula>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x</formula>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
        <row>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
        <row>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
        <row>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
      </table>
      <text>
        Second, a composion of two EBNF modifers can be massaged to one modifier according
        to the table below:
      </text>
      <table>
        <header>
          <cell>
            <empty/>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </header>
        <row>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
        <row>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
        <row>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
      </table>
      <text>
        Sequential composition of symbols is more complicated since
        it does not necessarily yield an EBNF modifier (those modifiers
        are not expressive enough to denote `one or two' repetitions,
        `two or more', etc). The following table shows the possible
        <ldf:keyword>massage</ldf:keyword> manipulations:
      </text>
      <table>
        <header>
          <cell>
            <empty/>
          </cell>
          <cell>
            <formula>x</formula>
          </cell>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </header>
        <row>
          <cell>
            <formula>x</formula>
          </cell>
          <cell>
            <empty/>
          </cell>
          <cell>
            <empty/>
          </cell>
          <cell>
            <empty/>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
        </row>
        <row>
          <cell>
            <formula>x?</formula>
          </cell>
          <cell>
            <empty/>
          </cell>
          <cell>
            <empty/>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
        <row>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <empty/>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <empty/>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
        </row>
        <row>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
          <cell>
            <formula>x^+</formula>
          </cell>
          <cell>
            <formula>x^\star</formula>
          </cell>
        </row>
      </table>
      <text>
        Here are more complicated rules for <ldf:keyword>massage</ldf:keyword>:
      </text>
      <formula>x (yx)? = (xy)? x</formula>
      <formula>x (yx)^+ = (xy)^+ x</formula>
      <formula>x (yx)^\star = (xy)^\star x</formula>
      <text>Another rule that is harder to express is when</text>
      <formula>x? = x</formula>
      <text>in the cases when x is optional anyway, i.e. it is one of the following:</text>
      <formula>\varepsilon|...</formula>
      <formula>a?</formula>
      <formula>a^\star</formula>
      <formula>y|...</formula>
      <formula>y z ...</formula>
      <text>where y and z are also recursively optional anyway, and a not necessary so.</text>
    </content>
  </xldf:insert>

  <xldf:place>
    <section>element-distribute</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:place>
    <section>element-factor</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:append>
    <where>element-factor</where>
    <content>
      <text>For example,</text>
    </content>
  </xldf:append>
  <xldf:import-grammar>
    <target>element-factor</target>
    <file>distribute_before.bgf</file>
  </xldf:import-grammar>
  <xldf:append>
    <where>element-factor</where>
    <content>
      <text>After using this transformation:</text>
    </content>
  </xldf:append>
  <xldf:import-sample>
    <target>element-factor</target>
    <file>distribute.xbnf</file>
  </xldf:import-sample>
  <xldf:append>
    <where>element-factor</where>
    <content>
      <text>Will look like this:</text>
    </content>
  </xldf:append>
  <xldf:import-grammar>
    <target>element-factor</target>
    <file>distribute_after.bgf</file>
  </xldf:import-grammar>
  <xldf:place>
    <section>element-deyaccify</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:append>
    <where>element-deyaccify</where>
    <content>
      <text>
        Deyaccification uses several general patterns. Left recursion like this:
      </text>
      <bgf:production>
        <nonterminal>N</nonterminal>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <nonterminal>N</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>x</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </bgf:production>
      <bgf:production>
        <nonterminal>N</nonterminal>
        <bgf:expression>
          <nonterminal>y</nonterminal>
        </bgf:expression>
      </bgf:production>
      <text>
        Becomes:
      </text>
      <bgf:production>
        <nonterminal>N</nonterminal>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <nonterminal>y</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <star>
                <bgf:expression>
                  <nonterminal>x</nonterminal>
                </bgf:expression>
              </star>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </bgf:production>
      <text>
        Right recursion like this:
      </text>
      <bgf:production>
        <nonterminal>N</nonterminal>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <nonterminal>x</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>N</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </bgf:production>
      <bgf:production>
        <nonterminal>N</nonterminal>
        <bgf:expression>
          <nonterminal>y</nonterminal>
        </bgf:expression>
      </bgf:production>
      <text>
        Becomes:
      </text>
      <bgf:production>
        <nonterminal>N</nonterminal>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <star>
                <bgf:expression>
                  <nonterminal>x</nonterminal>
                </bgf:expression>
              </star>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>y</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </bgf:production>
      <text>
        In either case, it is checked if x and y are the same. If they are, the result is more concise:
      </text>
      <bgf:production>
        <nonterminal>N</nonterminal>
        <bgf:expression>
          <plus>
            <bgf:expression>
              <nonterminal>x</nonterminal>
            </bgf:expression>
          </plus>
        </bgf:expression>
      </bgf:production>
    </content>
  </xldf:append>
  <xldf:place>
    <section>element-yaccify</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:place>
    <section>element-eliminate</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:place>
    <section>element-introduce</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:place>
    <section>element-import</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:place>
    <section>element-vertical</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:place>
    <section>element-horizontal</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:place>
    <section>element-rename</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:place>
    <section>element-rassoc</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>
  <xldf:place>
    <section>element-lassoc</section>
    <inside>group-refactoringtransformation</inside>
  </xldf:place>

</xldf:sequence>