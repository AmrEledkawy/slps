<?xml version="1.0"?>
<lcf:configuration xmlns:lcf="http://planet-sl.org/lcf">
  <shortcut>
    <name>slps</name>
    <definition>../../..</definition>
  </shortcut>
  <shortcut>
    <name>fl</name>
    <definition>..</definition>
  </shortcut>
  <shortcut>
    <name>tools</name>
    <definition>
      <expand>slps</expand>/shared/tools
    </definition>
  </shortcut>
  <shortcut>
    <name>validator</name>
    <definition>
      <expand>slps</expand>/download/msv/msv.jar
    </definition>
  </shortcut>
  <shortcut>
    <name>bgfschema</name>
    <definition>
      <expand>slps</expand>/shared/xsd/bgf.xsd
    </definition>
  </shortcut>
  <shortcut>
    <name>baseldf</name>
    <definition>
      <expand>fl</expand>/ldf/fl.ldf
    </definition>
  </shortcut>
  <shortcut>
    <name>runjava1jar</name>
    <definition>
      <expand>fl</expand>/java1/javafl.jar
    </definition>
  </shortcut>
  <shortcut>
    <name>rundcgdir</name>
    <definition>
      <expand>fl</expand>/prolog
    </definition>
  </shortcut>
  <comment>
    # extract, diff and test must be present, the rest is optional and completely volatile
    # if validate is present, extracted bgfs and all bgfs produced by transformations will be validated with it
    # besides shortcuts, one can use these variables:
    #	%action%	- everywhere			macro for the name of the action
    #	%source%	- everywhere			macro for the name of the source
    #	%type%		- in extract			macro for the type of the source
    #	%args%		- in extract			macro for the extraction arguments
    #	%1%		- in diff				macro for the first filename in a pair
    #	%2%		- in diff				macro for the second filename in a pair
  </comment>
  <action>
    <name>extract</name>
    <definition>
      <command>
        <expand>tools</expand>/<expand-type/>2bgf <expand-arguments/> bgf/<expand-source/>.bgf
      </command>
    </definition>
  </action>
  <action>
    <name>unerase</name>
    <name>abstract1</name>
    <name>concrete2abstract</name>
    <name>downcase</name>
    <name>horizontal2vertical</name>
    <name>preferDcg</name>
    <name>reroot</name>
    <name>trimJaxb</name>
    <name>downcase</name>
    <name>trimOm</name>
    <name>preferJaxb</name>
    <name>stripTerminals</name>
    <name>layering</name>
    <name>preferJava</name>
    <name>massageXsd</name>
    <definition>
      <command>
        <expand>tools</expand>/xbgf bgf/<expand-source/>.bgf xbgf/<expand-action/>.xbgf bgf/<expand-source/>.<expand-action/>.bgf
      </command>
    </definition>
  </action>
  <action>
    <name>validate</name>
    <definition>
      <command>
        java -jar <expand>validator</expand> <expand>bgfschema</expand> bgf/<expand-source/>.bgf
      </command>
    </definition>
  </action>
  <action>
    <name>diff</name>
    <definition>
      <command>
        <expand>tools</expand>/bdt bgf/<expand-first/>.bgf bgf/<expand-second/>.bgf
      </command>
    </definition>
  </action>
  <action>
    <name>test</name>
    <definition>
      <command out="samples.xml">
        xsltproc <expand>slps</expand>/shared/xsl/ldf2samples.xslt <expand>baseldf</expand>
      </command>
    </definition>
  </action>
  <source>
    <name>antlr</name>
    <type>antlr</type>
    <arguments>
      <argument>
        <expand>fl</expand>/java1/FL.g
      </argument>
    </arguments>
    <parser>
      <command err="/dev/null">
        java -cp ${CLASSPATH}:<expand>runjava1jar</expand> -ea TestIO <expand-sample/> <expand-parsed/>
      </command>
    </parser>
    <evaluator>
      <command err="/dev/null">
        java -cp ${CLASSPATH}:<expand>runjava1jar</expand> -ea TestEvaluator <expand-context/> <expand-sample/> <expand-yields/>
      </command>
    </evaluator>
  </source>
  <source>
    <name>dcg</name>
    <type>dcg</type>
    <arguments>
      <argument>
        <expand>fl</expand>/prolog/Parser.pro
      </argument>
    </arguments>
    <parser>
      <command>
        swipl -q -f <expand>rundcgdir</expand>/TestIO.pro -t "main('<expand-sample/>','<expand-parsed/>')"
      </command>
    </parser>
    <evaluator>
      <command>
        swipl -q -f <expand>rundcgdir</expand>/TestEvaluator.pro -t "main('<expand-context/>','<expand-sample/>',<expand-yields/>)"
      </command>
    </evaluator>
  </source>
  <source>
    <name>om</name>
    <type>java</type>
    <arguments>
      <argument>
        <expand>fl</expand>/java1
      </argument>
      <argument>
        types
      </argument>
    </arguments>
  </source>
  <source>
    <name>xsd</name>
    <type>xsd</type>
    <arguments>
      <argument>
        <expand>fl</expand>/xsd/fl.xsd
      </argument>
    </arguments>
  </source>
  <source>
    <name>jaxb</name>
    <type>java</type>
    <arguments>
      <argument>
        <expand>fl</expand>/java3
      </argument>
      <argument>
        fl
      </argument>
    </arguments>
  </source>
  <target>
    <name>java</name>
    <branch>
      <take>om</take>
      <perform>downcase</perform>
      <perform>trimOm</perform>
      <perform>preferJaxb</perform>
      <perform>reroot</perform>
    </branch>
    <branch>
      <take>jaxb</take>
      <perform>downcase</perform>
      <perform>trimJaxb</perform>
      <perform>reroot</perform>
    </branch>
  </target>
  <target>
    <name>xsdjava</name>
    <branch>
      <take>java</take>
      <perform>unerase</perform>
    </branch>
    <branch>
      <take>xsd</take>
      <perform>downcase</perform>
      <perform>preferJava</perform>
      <perform>massageXsd</perform>
    </branch>
  </target>
  <target>
    <name>concrete</name>
    <branch>
      <take>dcg</take>
      <perform>downcase</perform>
      <perform>reroot</perform>
    </branch>
    <branch>
      <take>antlr</take>
      <perform>downcase</perform>
      <perform>preferDcg</perform>
      <perform>horizontal2vertical</perform>
      <perform>reroot</perform>
    </branch>
  </target>
  <target>
    <name>abstract</name>
    <branch>
      <take>concrete</take>
      <perform>stripTerminals</perform>
      <perform>layering</perform>
      <perform>concrete2abstract</perform>
    </branch>
    <branch>
      <take>xsdjava</take>
      <perform>abstract1</perform>
    </branch>
  </target>
</lcf:configuration>