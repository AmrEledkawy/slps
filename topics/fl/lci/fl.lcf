<?xml version="1.0"?>
<lcf:configuration xmlns:lcf="http://planet-sl.org/lcf">
  <shortcut>
    <name>slps</name>
    <definition>../../..</definition>
  </shortcut>
  <shortcut>
    <name>fl</name>
    <definition>..</definition>
  </shortcut>
  <shortcut>
    <name>tools</name>
    <definition>
      <expand>slps</expand>/shared/tools
    </definition>
  </shortcut>
  <shortcut>
    <name>runjava1jar</name>
    <definition>
      <expand>fl</expand>/java1/javafl.jar
    </definition>
  </shortcut>
  <shortcut>
    <name>rundcgdir</name>
    <definition>
      <expand>fl</expand>/prolog
    </definition>
  </shortcut>

  <comment>
    if validator is present, extracted bgfs and all bgfs produced by transformations will be validated with it
  </comment>
  <tool>
    <name>validator</name>
    <command>
      java -jar <expand>slps</expand>/download/msv/msv.jar <expand>slps</expand>/shared/xsd/bgf.xsd
    </command>
  </tool>
  <tool>
    <name>diff</name>
    <command>
      <expand>tools</expand>/bdt
    </command>
  </tool>
  <tool>
    <name>testset</name>
    <command out="samples.xml">
      xsltproc <expand>slps</expand>/shared/xsl/ldf2samples.xslt <expand>fl</expand>/ldf/fl.ldf
  </command>
  </tool>
  
  <action>
    <name>unerase</name>
    <name>abstract1</name>
    <name>concrete2abstract</name>
    <name>downcase</name>
    <name>horizontal2vertical</name>
    <name>preferDcg</name>
    <name>reroot</name>
    <name>trimJaxb</name>
    <name>downcase</name>
    <name>trimOm</name>
    <name>preferJaxb</name>
    <name>stripTerminals</name>
    <name>layering</name>
    <name>preferJava</name>
    <name>massageXsd</name>
    <definition>
      <command>
        <expand>tools</expand>/xbgf <expand-input/>.bgf xbgf/<expand-action/>.xbgf <expand-input/>.<expand-action/>.bgf
      </command>
    </definition>
  </action>
  
  <source>
    <name>antlr</name>
    <extractor>
      <name>
        <expand>tools</expand>/antlr2bgf
      </name>
      <arguments>
        <argument>
          <expand>fl</expand>/java1/FL.g
        </argument>
        <argument>
          antlr.bgf
        </argument>
      </arguments>
    </extractor>
    <parser>
      <command err="/dev/null">
        java -cp ${CLASSPATH}:<expand>runjava1jar</expand> -ea TestIO <expand-input/> <expand-output/>
      </command>
    </parser>
    <evaluator>
      <command err="/dev/null">
        java -cp ${CLASSPATH}:<expand>runjava1jar</expand> -ea TestEvaluator <expand-context/> <expand-input/> <expand-yields/>
      </command>
    </evaluator>
  </source>
  <source>
    <name>dcg</name>
    <extractor>
      <name>
        <expand>tools</expand>/dcg2bgf
      </name>
      <arguments>
        <argument>
          <expand>fl</expand>/prolog/Parser.pro
        </argument>
        <argument>
          dcg.bgf
        </argument>
      </arguments>
    </extractor>
    <parser>
      <command>
        swipl -q -f <expand>rundcgdir</expand>/TestIO.pro -t "main('<expand-input/>','<expand-output/>')"
      </command>
    </parser>
    <evaluator>
      <command>
        swipl -q -f <expand>rundcgdir</expand>/TestEvaluator.pro -t "main('<expand-context/>','<expand-input/>',<expand-yields/>)"
      </command>
    </evaluator>
  </source>
  <source>
    <name>om</name>
    <extractor>
      <name>
        <expand>tools</expand>/java2bgf
      </name>
      <arguments>
        <argument>
          <expand>fl</expand>/java1
        </argument>
        <argument>
          types
        </argument>
        <argument>
          om.bgf
        </argument>
      </arguments>
    </extractor>
  </source>
  <source>
    <name>xsd</name>
    <extractor>
      <name>
        <expand>tools</expand>/xsd2bgf
      </name>
      <arguments>
        <argument>
          <expand>fl</expand>/xsd/fl.xsd
        </argument>
        <argument>
          xsd.bgf
        </argument>
      </arguments>
    </extractor>
  </source>
  <source>
    <name>jaxb</name>
    <extractor>
      <name>
        <expand>tools</expand>/java2bgf
      </name>
      <arguments>
        <argument>
          <expand>fl</expand>/java3
        </argument>
        <argument>
          fl
        </argument>
        <argument>
          jaxb.bgf
        </argument>
      </arguments>
    </extractor>
  </source>

  <target>
    <name>java</name>
    <branch>
      <input>om</input>
      <perform>downcase</perform>
      <perform>trimOm</perform>
      <perform>preferJaxb</perform>
      <perform>reroot</perform>
    </branch>
    <branch>
      <input>jaxb</input>
      <perform>downcase</perform>
      <perform>trimJaxb</perform>
      <perform>reroot</perform>
    </branch>
  </target>
  <target>
    <name>xsdjava</name>
    <branch>
      <input>java</input>
      <perform>unerase</perform>
    </branch>
    <branch>
      <input>xsd</input>
      <perform>downcase</perform>
      <perform>preferJava</perform>
      <perform>massageXsd</perform>
    </branch>
  </target>
  <target>
    <name>concrete</name>
    <branch>
      <input>dcg</input>
      <perform>downcase</perform>
      <perform>reroot</perform>
    </branch>
    <branch>
      <input>antlr</input>
      <perform>downcase</perform>
      <perform>preferDcg</perform>
      <perform>horizontal2vertical</perform>
      <perform>reroot</perform>
    </branch>
  </target>
  <target>
    <name>abstract</name>
    <branch>
      <input>concrete</input>
      <perform>stripTerminals</perform>
      <perform>layering</perform>
      <perform>concrete2abstract</perform>
    </branch>
    <branch>
      <input>xsdjava</input>
      <perform>abstract1</perform>
    </branch>
  </target>
</lcf:configuration>