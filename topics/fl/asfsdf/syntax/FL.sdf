module syntax/FL

imports syntax/Numbers
imports basic/Whitespace

exports
	sorts 
		Program Function Expr Ops Name Newline

	context-free syntax
		Function+					-> Program
		Name Name+ "=" Expr Newline+			-> Function
		Expr Ops Expr 					-> Expr {left}	%% binary
		Name Expr+					-> Expr		%% apply
		"if" Expr "then" Expr "else" Expr		-> Expr		%% ifthenelse
		"(" Expr ")"					-> Expr {bracket}
		Name						-> Expr
		Int						-> Expr

	context-free syntax
		"-"		-> Ops
		"+"		-> Ops
		"=="		-> Ops
		";"		-> Newline			%% preprocessed

	lexical syntax
		[a-z]+			-> Name
		"if" | "then" | "else"	-> Name {reject}

	lexical restrictions
		Name -/- [a-z]

hiddens
	context-free start-symbols 
		Program
