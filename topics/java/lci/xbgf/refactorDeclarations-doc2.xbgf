<xbgf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf">

  <xbgf:horizontal>VariableDeclarators</xbgf:horizontal>
  <xbgf:deyaccify>VariableDeclarators</xbgf:deyaccify>
  
  <!-- 
   - Fail: VariableDeclarator.
      - [], ,([n(Identifier), n(VariableDeclaratorRest)])
     vs.
      - [], ;([n(VariableDeclaratorId), ,([n(VariableDeclaratorId), t(=), n(VariableInitializer)])])
  -->
  <xbgf:horizontal>VariableDeclaratorId</xbgf:horizontal>
  <xbgf:deyaccify>VariableDeclaratorId</xbgf:deyaccify>
  <xbgf:horizontal>VariableDeclarator</xbgf:horizontal>
  <xbgf:factor>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <nonterminal>VariableDeclaratorId</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <nonterminal>VariableDeclaratorId</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>=</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>VariableInitializer</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <nonterminal>VariableDeclaratorId</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <choice>
            <bgf:expression>
              <epsilon/>
            </bgf:expression>
            <bgf:expression>
              <sequence>
                <bgf:expression>
                  <terminal>=</terminal>
                </bgf:expression>
                <bgf:expression>
                  <nonterminal>VariableInitializer</nonterminal>
                </bgf:expression>
              </sequence>
            </bgf:expression>
          </choice>
        </bgf:expression>
      </sequence>
    </bgf:expression>
  </xbgf:factor>
  <xbgf:massage>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <epsilon/>
        </bgf:expression>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>=</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>VariableInitializer</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <bgf:expression>
      <optional>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>=</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>VariableInitializer</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </optional>
    </bgf:expression>
  </xbgf:massage>

  <xbgf:unfold>
    <nonterminal>VariableDeclaratorId</nonterminal>
    <in>
      <nonterminal>VariableDeclarator</nonterminal>
    </in>
  </xbgf:unfold>
  <xbgf:fold>
    <nonterminal>BracketsOpt</nonterminal>
  </xbgf:fold>

  <xbgf:extract>
    <bgf:production>
      <nonterminal>VariableDeclaratorRest</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>BracketsOpt</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <sequence>
                  <bgf:expression>
                    <terminal>=</terminal>
                  </bgf:expression>
                  <bgf:expression>
                    <nonterminal>VariableInitializer</nonterminal>
                  </bgf:expression>
                </sequence>
              </bgf:expression>
            </optional>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:extract>
  
  <!-- 
   - Fail: CompilationUnit.
      - [], ,([?(,([t(package), n(QualifiedIdentifier), t((;))])), *(n(ImportDeclaration)), *(n(TypeDeclaration))])
     vs.
      - [], ,([?(n(PackageDeclaration)), ?(n(ImportDeclarations)), ?(n(TypeDeclarations))])
  -->
  <xbgf:inline>PackageDeclaration</xbgf:inline>
  <xbgf:horizontal>ImportDeclarations</xbgf:horizontal>
  <xbgf:deyaccify>ImportDeclarations</xbgf:deyaccify>
  <xbgf:inline>ImportDeclarations</xbgf:inline>
  <xbgf:massage>
    <bgf:expression>
      <optional>
        <bgf:expression>
          <plus>
            <bgf:expression>
              <nonterminal>ImportDeclaration</nonterminal>
            </bgf:expression>
          </plus>
        </bgf:expression>
      </optional>
    </bgf:expression>
    <bgf:expression>
      <star>
        <bgf:expression>
          <nonterminal>ImportDeclaration</nonterminal>
        </bgf:expression>
      </star>
    </bgf:expression>
  </xbgf:massage>
  <xbgf:horizontal>TypeDeclarations</xbgf:horizontal>
  <xbgf:deyaccify>TypeDeclarations</xbgf:deyaccify>
  <xbgf:inline>TypeDeclarations</xbgf:inline>
  <xbgf:massage>
    <bgf:expression>
      <optional>
        <bgf:expression>
          <plus>
            <bgf:expression>
              <nonterminal>TypeDeclaration</nonterminal>
            </bgf:expression>
          </plus>
        </bgf:expression>
      </optional>
    </bgf:expression>
    <bgf:expression>
      <star>
        <bgf:expression>
          <nonterminal>TypeDeclaration</nonterminal>
        </bgf:expression>
      </star>
    </bgf:expression>
  </xbgf:massage>

  <!-- 
   - Fail: ImportDeclaration.
      - [], ,([t(import), n(Identifier), *(,([t(.), n(Identifier)])), ?(,([t(.), t(*)])), t((;))])
     vs.
      - [], ;([n(SingleTypeImportDeclaration), n(TypeImportOnDemandDeclaration)])
  -->
  <xbgf:inline>SingleTypeImportDeclaration</xbgf:inline>
  <xbgf:inline>TypeImportOnDemandDeclaration</xbgf:inline>
  
  <!-- 
   - Fail: ImportDeclaration.
      - [], ,([t(import), n(QualifiedIdentifier), ?(,([t(.), t(*)])), t((;))])
     vs.
      - [], ;([,([t(import), n(QualifiedIdentifier), t((;))]),
               ,([t(import), n(QualifiedIdentifier), t(.), t(*), t((;))])])
  -->
  <xbgf:horizontal>ImportDeclaration</xbgf:horizontal>
  <xbgf:factor>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>import</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>QualifiedIdentifier</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>;</terminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>import</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>QualifiedIdentifier</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>.</terminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>*</terminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>;</terminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>import</terminal>
        </bgf:expression>
        <bgf:expression>
          <nonterminal>QualifiedIdentifier</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <choice>
            <bgf:expression>
              <epsilon/>
            </bgf:expression>
            <bgf:expression>
              <sequence>
                <bgf:expression>
                  <terminal>.</terminal>
                </bgf:expression>
                <bgf:expression>
                  <terminal>*</terminal>
                </bgf:expression>
              </sequence>
            </bgf:expression>
          </choice>
        </bgf:expression>
        <bgf:expression>
          <terminal>;</terminal>
        </bgf:expression>
      </sequence>
    </bgf:expression>
  </xbgf:factor>
  <xbgf:massage>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <epsilon/>
        </bgf:expression>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>.</terminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>*</terminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <bgf:expression>
      <optional>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>.</terminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>*</terminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </optional>
    </bgf:expression>
  </xbgf:massage>

</xbgf:sequence>