<xbgf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf">

  <!-- in the extracted version root is undefined -->
  <xbgf:reroot>
    <root>CompilationUnit</root>
  </xbgf:reroot>

  <!-- ISSUE CORRECT SPECERROR
  There's no such thing as TypeName
  
Annotation:
        </em><code>@</code><em> TypeName [<code>(</code> [Identifier <code>=</code>] ElementValue<code>)</code>]
  -->
  <xbgf:unite>
    <add>TypeName</add>
    <to>QualifiedIdentifier</to>
  </xbgf:unite>
  
  <!-- ISSUE EXTRACTERROR
  The extractor can't tell if {} are terminals or BNF
  
   - Fail: Block.
      - [], *(n(BlockStatements))
     vs.
      - [], ,([t({), n(BlockStatements), t(})])
  -->
  <!-- BREFACTOR -->
  <xbgf:undefine>Block</xbgf:undefine>
  <!-- REVISE -->
  <xbgf:define>
    <bgf:production>
      <nonterminal>Block</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <terminal>{</terminal>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>BlockStatements</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <terminal>}</terminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:define>

  <!-- ISSUE EXTRACTERROR
   - Fail: AnnotationTypeBody.
      - [], *(?(n(AnnotationTypeElementDeclarations)))
     vs.
      - [], ,([t({), ?(n(AnnotationTypeElementDeclarations)), t(})])
  -->
  <!-- BREFACTOR -->
  <xbgf:undefine>AnnotationTypeBody</xbgf:undefine>
  <!-- REVISE -->
  <xbgf:define>
    <bgf:production>
      <nonterminal>AnnotationTypeBody</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <terminal>{</terminal>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <nonterminal>AnnotationTypeElementDeclarations</nonterminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <terminal>}</terminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:define>

  <!-- ISSUE CORRECT SPECERROR
  Real error in JLS3:
   - Fail: Expression2Rest.
      - [], ;([,([t(instanceof), n(Type)]), *(,([n(InfixOp), n(Expression3)]))])
     vs.
      - [], ;([*(,([n(InfixOp), n(Expression3)])), ,([n(Expression3), t(instanceof), n(Type)])])
  -->
  <!-- REVISE -->
  <xbgf:replace>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <nonterminal>Expression3</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <terminal>instanceof</terminal>
        </bgf:expression>
        <bgf:expression>
          <nonterminal>Type</nonterminal>
        </bgf:expression>
      </sequence>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>instanceof</terminal>
        </bgf:expression>
        <bgf:expression>
          <nonterminal>Type</nonterminal>
        </bgf:expression>
      </sequence>
    </bgf:expression>
  </xbgf:replace>
  
  <!-- ISSUE CORRECT SPECERROR 
  lacking definition copied from JLS2 -->
  <!-- GENERALITY -->
  <xbgf:define>
    <bgf:production>
      <nonterminal>ForUpdate</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>StatementExpression</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>MoreStatementExpressions</nonterminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:define>

</xbgf:sequence>