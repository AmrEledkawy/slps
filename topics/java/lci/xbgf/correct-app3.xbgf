<xbgf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf">

  <!-- in the extracted version root is undefined -->
  <xbgf:reroot>
    <root>CompilationUnit</root>
  </xbgf:reroot>

  <!-- ISSUE CORRECT SPECERROR
  There's no such thing as TypeName
  
Annotation:
        </em><code>@</code><em> TypeName [<code>(</code> [Identifier <code>=</code>] ElementValue<code>)</code>]
  -->
  <xbgf:unite>
    <add>TypeName</add>
    <to>QualifiedIdentifier</to>
  </xbgf:unite>

  <!-- ISSUE CORRECT SPECERROR
  Real error in JLS3:
   - Fail: Expression2Rest.
      - [], ;([,([t(instanceof), n(Type)]), *(,([n(InfixOp), n(Expression3)]))])
     vs.
      - [], ;([*(,([n(InfixOp), n(Expression3)])), ,([n(Expression3), t(instanceof), n(Type)])])
  -->
  <!-- REVISE -->
  <xbgf:project>
    <bgf:production>
      <nonterminal>Expression2Rest</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <marked>
              <bgf:expression>
                <nonterminal>Expression3</nonterminal>
              </bgf:expression>
            </marked>
          </bgf:expression>
          <bgf:expression>
            <terminal>instanceof</terminal>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>Type</nonterminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:project>

  <!-- ISSUE CORRECT SPECERROR 
  lacking definition copied from JLS2 with proper renaming -->
  <!-- GENERALITY -->
  <xbgf:define>
    <bgf:production>
      <nonterminal>ForUpdate</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>StatementExpression</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>Expressions</nonterminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:define>
  <xbgf:unite>
    <add>MoreStatementExpressions</add>
    <to>Expressions</to>
  </xbgf:unite>

  <!--   ISSUE CORRECT SPECERROR
  - Fail: Statement.
      - [], ;([n(Block),
              ,([t(break), ?(n(Identifier))]),
     vs.
      - [], ;([n(Block),
               ,([t(break), ?(n(Identifier)), t((;))]),
  -->
  <!-- REVISE -->
  <xbgf:replace>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>break</terminal>
        </bgf:expression>
        <bgf:expression>
          <optional>
            <bgf:expression>
              <nonterminal>Identifier</nonterminal>
            </bgf:expression>
          </optional>
        </bgf:expression>
      </sequence>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>break</terminal>
        </bgf:expression>
        <bgf:expression>
          <optional>
            <bgf:expression>
              <nonterminal>Identifier</nonterminal>
            </bgf:expression>
          </optional>
        </bgf:expression>
        <bgf:expression>
          <terminal>;</terminal>
        </bgf:expression>
      </sequence>
    </bgf:expression>
  </xbgf:replace>

  <!--   ISSUE CORRECT SPECERROR
         same with continue -->
  <!-- REVISE -->
  <xbgf:replace>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>continue</terminal>
        </bgf:expression>
        <bgf:expression>
          <optional>
            <bgf:expression>
              <nonterminal>Identifier</nonterminal>
            </bgf:expression>
          </optional>
        </bgf:expression>
      </sequence>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>continue</terminal>
        </bgf:expression>
        <bgf:expression>
          <optional>
            <bgf:expression>
              <nonterminal>Identifier</nonterminal>
            </bgf:expression>
          </optional>
        </bgf:expression>
        <bgf:expression>
          <terminal>;</terminal>
        </bgf:expression>
      </sequence>
    </bgf:expression>
  </xbgf:replace>

  <!-- ISSUE CORRECT 
  forgotten comma
  ElementValues:
        ElementValue [ ElementValues ]
  should be
  ElementValues:
        ElementValue [ "," ElementValues ]
  -->
  <!-- REVISE -->
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>ElementValues</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>,</terminal>
        </bgf:expression>
        <bgf:expression>
          <nonterminal>ElementValues</nonterminal>
        </bgf:expression>
      </sequence>
    </bgf:expression>
    <in>
      <nonterminal>ElementValues</nonterminal>
    </in>
  </xbgf:replace>

  <!--   undefine lexical term -->
  <!-- GENERALITY -->
  <xbgf:undefine>Identifier</xbgf:undefine>

  <!-- ISSUE CORRECT SPECERROR -->
  <!-- not right because VariableDeclarator starts with Identifier:
  
AnnotationTypeElementRest:
        Type Identifier AnnotationMethodOrConstantRest ";"
AnnotationMethodOrConstantRest:
        AnnotationMethodRest
AnnotationMethodOrConstantRest:
        AnnotationConstantRest
AnnotationMethodRest:
        "(" ")" DefaultValue ?
AnnotationConstantRest:
        VariableDeclarators
  -->
  <!-- REVISE -->
  <xbgf:project>
    <bgf:production>
      <nonterminal>AnnotationTypeElementRest</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>Type</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <marked>
              <bgf:expression>
                <nonterminal>Identifier</nonterminal>
              </bgf:expression>
            </marked>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>AnnotationMethodOrConstantRest</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <terminal>;</terminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:project>
  <!-- REVISE -->
  <xbgf:inject>
    <bgf:production>
      <nonterminal>AnnotationMethodOrConstantRest</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <marked>
              <bgf:expression>
                <nonterminal>Identifier</nonterminal>
              </bgf:expression>
            </marked>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>AnnotationMethodRest</nonterminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:inject>

  <!-- ISSUE CORRECT SPECERROR - forgotten definition -->
  <!-- GENERALITY -->
  <xbgf:define>
    <bgf:production>
      <nonterminal>FormalParameter</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <terminal>final</terminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>Type</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>VariableDeclaratorId</nonterminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:define>
</xbgf:sequence>