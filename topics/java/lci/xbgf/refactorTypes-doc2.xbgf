<xbgf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf">

  <!--
  The type system of the syntax appendix looks like this:
  
  Type is defined as:
     Identifier { "." Identifier } BracketsOpt
     BasicType
  BasicType is defined as:
     "byte"
     "short"
     "char"
     "int"
     "long"
     "float"
     "double"
     "boolean"
  TypeList is defined as:
     Type { "," Type }
  
  While the collected version is more complicated:
  
  Type is defined as:
     PrimitiveType
     ReferenceType
  PrimitiveType is defined as:
     NumericType
     "boolean"
  NumericType is defined as:
     IntegralType
     FloatingPointType
  IntegralType is defined as:
     "byte"
     "short"
     "int"
     "long"
     "char"
  FloatingPointType is defined as:
     "float"
     "double"
  ReferenceType is defined as:
     ClassOrInterfaceType
     ArrayType
  ClassOrInterfaceType is defined as:
     ClassType
     InterfaceType
  ClassType is defined as:
     TypeName
  ClassTypeList is defined as:
     ClassType
     ClassTypeList "," ClassType
  InterfaceType is defined as:
     TypeName
  InterfaceTypeList is defined as:
     InterfaceType
     InterfaceTypeList "," InterfaceType
  TypeName is defined as:
     Identifier
     PackageOrTypeName "." Identifier
  PackageOrTypeName is defined as:
     Identifier
     PackageOrTypeName "." Identifier
  ArrayType is defined as:
     Type "[" "]"
  ResultType is defined as:
     Type
     "void"
  -->

  <!-- 
  First composing BasicType out of PrimitiveType, NumericType, FloatingPointType & IntegralType -->
  <xbgf:horizontal>IntegralType</xbgf:horizontal>
  <xbgf:inline>IntegralType</xbgf:inline>
  <xbgf:horizontal>FloatingPointType</xbgf:horizontal>
  <xbgf:inline>FloatingPointType</xbgf:inline>
  <xbgf:horizontal>NumericType</xbgf:horizontal>
  <xbgf:inline>NumericType</xbgf:inline>
  <xbgf:distribute>
    <nonterminal>PrimitiveType</nonterminal>
  </xbgf:distribute>
  <xbgf:rename>
    <nonterminal>
      <from>PrimitiveType</from>
      <to>BasicType</to>
    </nonterminal>
  </xbgf:rename>
  <xbgf:vertical>
    <nonterminal>BasicType</nonterminal>
  </xbgf:vertical>
  
  <!-- ISSUE PERMISSIVENESS
  Merging interfaces with classes and making lists and other things conform -->
  <!-- GENERALITY -->
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>ClassType</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>Type</nonterminal>
    </bgf:expression>
    <in>
      <nonterminal>ClassTypeList</nonterminal>
    </in>
  </xbgf:replace>
  <!-- GENERALITY -->
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>InterfaceType</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>Type</nonterminal>
    </bgf:expression>
    <in>
      <nonterminal>InterfaceTypeList</nonterminal>
    </in>
  </xbgf:replace>
  <!-- GENERALITY -->
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>InterfaceType</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>Type</nonterminal>
    </bgf:expression>
    <in>
      <nonterminal>ExtendsInterfaces</nonterminal>
    </in>
  </xbgf:replace>
  <!-- GENERALITY -->
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>ClassType</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>Type</nonterminal>
    </bgf:expression>
    <in>
      <nonterminal>Super</nonterminal>
    </in>
  </xbgf:replace>
  <xbgf:unite>
    <add>InterfaceType</add>
    <to>ClassType</to>
  </xbgf:unite>
  <xbgf:unite>
    <add>InterfaceTypeList</add>
    <to>ClassTypeList</to>
  </xbgf:unite>
  <xbgf:rename>
    <nonterminal>
      <from>ClassTypeList</from>
      <to>TypeList</to>
    </nonterminal>
  </xbgf:rename>
  <xbgf:deyaccify>TypeList</xbgf:deyaccify>
  
  <!-- Introducing brackets brutally, too hard to derive -->
  <xbgf:appear>
    <bgf:production>
      <nonterminal>ClassOrInterfaceType</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>ClassType</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <marked>
              <bgf:expression>
                <star>
                  <bgf:expression>
                    <sequence>
                      <bgf:expression>
                        <terminal>[</terminal>
                      </bgf:expression>
                      <bgf:expression>
                        <terminal>]</terminal>
                      </bgf:expression>
                    </sequence>
                  </bgf:expression>
                </star>
              </bgf:expression>
            </marked>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:appear>
  <xbgf:extract>
    <bgf:production>
      <nonterminal>BracketsOpt</nonterminal>
      <bgf:expression>
        <star>
          <bgf:expression>
            <sequence>
              <bgf:expression>
                <terminal>[</terminal>
              </bgf:expression>
              <bgf:expression>
                <terminal>]</terminal>
              </bgf:expression>
            </sequence>
          </bgf:expression>
        </star>
      </bgf:expression>
    </bgf:production>
  </xbgf:extract>
  
  <!-- BREFACTOR -->
  <xbgf:undefine>ArrayType</xbgf:undefine>
  <xbgf:remove>
    <vertical>
      <bgf:production>
        <nonterminal>ReferenceType</nonterminal>
        <bgf:expression>
          <nonterminal>ArrayType</nonterminal>
        </bgf:expression>
      </bgf:production>
    </vertical>
  </xbgf:remove>

  <!-- Finishing touches -->
  <xbgf:inline>ClassOrInterfaceType</xbgf:inline>
  <xbgf:inline>ClassType</xbgf:inline>
  <xbgf:inline>ReferenceType</xbgf:inline>


</xbgf:sequence>