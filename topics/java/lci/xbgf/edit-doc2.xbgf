<xbgf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf">

  <xbgf:horizontal>Primary</xbgf:horizontal>

 <!-- BREFACTOR
  ConstructorBody is defined as:
     { [ ExplicitConstructorInvocation ] [ BlockStatements ] }
  -->
  <xbgf:undefine>ConstructorBody</xbgf:undefine>
<!-- BREFACTOR -->
  <xbgf:unite>
    <add>ConstructorBody</add>
    <to>MethodBody</to>
  </xbgf:unite>
<!-- BREFACTOR -->
  <xbgf:eliminate>ExplicitConstructorInvocation</xbgf:eliminate>
<!-- BREFACTOR -->
  <xbgf:eliminate>ArgumentList</xbgf:eliminate>

  <!-- ISSUE PERMISSIVENESS
   Some productions use a more general QualifiedIdentifierList instead of TypeList
  -->
  <xbgf:introduce>
    <bgf:production>
      <nonterminal>QualifiedIdentifierList</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>QualifiedIdentifier</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <star>
              <bgf:expression>
                <sequence>
                  <bgf:expression>
                    <terminal>,</terminal>
                  </bgf:expression>
                  <bgf:expression>
                    <nonterminal>QualifiedIdentifier</nonterminal>
                  </bgf:expression>
                </sequence>
              </bgf:expression>
            </star>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:introduce>
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>TypeList</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>QualifiedIdentifierList</nonterminal>
    </bgf:expression>
    <in>
      <nonterminal>ConstructorDeclaratorRest</nonterminal>
    </in>
  </xbgf:replace>
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>TypeList</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>QualifiedIdentifierList</nonterminal>
    </bgf:expression>
    <in>
      <nonterminal>MethodDeclaratorRest</nonterminal>
    </in>
  </xbgf:replace>
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>TypeList</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>QualifiedIdentifierList</nonterminal>
    </bgf:expression>
    <in>
      <nonterminal>VoidInterfaceMethodDeclaratorRest</nonterminal>
    </in>
  </xbgf:replace>
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>TypeList</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>QualifiedIdentifierList</nonterminal>
    </bgf:expression>
    <in>
      <nonterminal>InterfaceMethodDeclaratorRest</nonterminal>
    </in>
  </xbgf:replace>

  <!-- BREFACTOR
   - Fail: MethodDeclaratorRest.
      - [], ,([n(FormalParameters), n(BracketsOpt), ?(,([t(throws), n(QualifiedIdentifierList)])), ;([n(MethodBody), t((;))])])
     vs.
      - [], ,([n(FormalParameters), ?(,([t(throws), n(QualifiedIdentifierList)])), n(MethodBody)])
  -->
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>MethodBody</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <nonterminal>MethodBody</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <terminal>;</terminal>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <in>
      <nonterminal>MethodDeclaratorRest</nonterminal>
    </in>
  </xbgf:replace>

 <!-- BREFACTOR
   - Fail: ArrayInitializer.
      - [], ,([t({), ?(,([n(VariableInitializer), *(,([t((,)), n(VariableInitializer)])), ?(t((,)))])), t(})])
     vs.
      - [], ,([t({), ?(,([n(VariableInitializer), *(,([t((,)), n(VariableInitializer)]))])), ?(t((,))), t(})])
      
   ArrayInitializer is defined as:                          (collected)
     "{" [ VariableInitializers ] [ "," ] "}"
   ArrayInitializer is defined as:                          (syntax)
     "{" [ VariableInitializers [ "," ] ] "}"
  -->
  <xbgf:replace>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <optional>
            <bgf:expression>
              <sequence>
                <bgf:expression>
                  <nonterminal>VariableInitializer</nonterminal>
                </bgf:expression>
                <bgf:expression>
                  <star>
                    <bgf:expression>
                      <sequence>
                        <bgf:expression>
                          <terminal>,</terminal>
                        </bgf:expression>
                        <bgf:expression>
                          <nonterminal>VariableInitializer</nonterminal>
                        </bgf:expression>
                      </sequence>
                    </bgf:expression>
                  </star>
                </bgf:expression>
              </sequence>
            </bgf:expression>
          </optional>
        </bgf:expression>
        <bgf:expression>
          <optional>
            <bgf:expression>
              <terminal>,</terminal>
            </bgf:expression>
          </optional>
        </bgf:expression>
      </sequence>
    </bgf:expression>
    <bgf:expression>
      <optional>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <nonterminal>VariableInitializer</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <star>
                <bgf:expression>
                  <sequence>
                    <bgf:expression>
                      <terminal>,</terminal>
                    </bgf:expression>
                    <bgf:expression>
                      <nonterminal>VariableInitializer</nonterminal>
                    </bgf:expression>
                  </sequence>
                </bgf:expression>
              </star>
            </bgf:expression>
            <bgf:expression>
              <optional>
                <bgf:expression>
                  <terminal>,</terminal>
                </bgf:expression>
              </optional>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </optional>
    </bgf:expression>
    <in>
      <nonterminal>ArrayInitializer</nonterminal>
    </in>
  </xbgf:replace>
</xbgf:sequence>