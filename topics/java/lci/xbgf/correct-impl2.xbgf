<?xml version="1.0" encoding="utf-8"?>
<xbgf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf">

  <!-- in the extracted version root is undefined -->
  <xbgf:reroot>
    <root>CompilationUnit</root>
  </xbgf:reroot>

  <!-- ISSUE CORRECT SPECERROR
  They forgot to define a nonterminal with "intuitive" name - we predicted it in ISO N3977! -->
  <!-- GENERALITY -->
  <!-- INITCORR -->
  <xbgf:define>
    <bgf:production>
      <nonterminal>ForInitOpt</nonterminal>
      <bgf:expression>
        <optional>
          <bgf:expression>
            <nonterminal>ForInit</nonterminal>
          </bgf:expression>
        </optional>
      </bgf:expression>
    </bgf:production>
  </xbgf:define>
  <xbgf:inline>ForInitOpt</xbgf:inline>

  <!-- ISSUE CORRECT SPECERROR
  They forgot to define a nonterminal with "intuitive" name - we predicted it in ISO N3977! -->
  <!-- GENERALITY -->
  <!-- INITCORR -->
  <xbgf:define>
    <bgf:production>
      <nonterminal>ForUpdateOpt</nonterminal>
      <bgf:expression>
        <optional>
          <bgf:expression>
            <nonterminal>ForUpdate</nonterminal>
          </bgf:expression>
        </optional>
      </bgf:expression>
    </bgf:production>
  </xbgf:define>
  <xbgf:inline>ForUpdateOpt</xbgf:inline>

  <!-- ISSUE CORRECT SPECERROR
  let's complete some of the statements with a trailing semicolon-->
  <!-- CORRECTION -->
  <xbgf:inject>
    <bgf:production>
      <nonterminal>Statement</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <terminal>continue</terminal>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <nonterminal>Identifier</nonterminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <marked>
              <bgf:expression>
                <terminal>;</terminal>
              </bgf:expression>
            </marked>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:inject>

  <!-- ISSUE CORRECT SPECERROR
  Same for BreakStatement -->
  <!-- CORRECTION -->
  <xbgf:inject>
    <bgf:production>
      <nonterminal>Statement</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <terminal>break</terminal>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <nonterminal>Identifier</nonterminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <marked>
              <bgf:expression>
                <terminal>;</terminal>
              </bgf:expression>
            </marked>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:inject>

  <!-- ISSUE CORRECT SPECERROR
  Expression is referenced as Expr:
  
  Expression3 is defined as:
     PrefixOp Expression3
     "(" Expr | Type ")" Expression3
     Primary { Selector } { PostfixOp }
  -->
  <!-- GENERALITY -->
  <!-- INITCORR -->
  <xbgf:replace>
    <bgf:expression>
      <nonterminal>Expr</nonterminal>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>Expression</nonterminal>
    </bgf:expression>
  </xbgf:replace>

  <!-- ISSUE CORRECT INCOMPATIBILITY
   - Fail: VoidInterfaceMethodDeclaratorRest.
      - [], ,([n(FormalParameters), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
     vs.
      - [], ,([n(FormalParameters), n(BracketsOpt), ?(,([t(throws), n(QualifiedIdentifierList)])), t((;))])
 -->
  <!-- CORRECTION -->
  <xbgf:appear>
    <bgf:production>
      <nonterminal>VoidInterfaceMethodDeclaratorRest</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>FormalParameters</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <marked>
              <bgf:expression>
                <star>
                  <bgf:expression>
                    <sequence>
                      <bgf:expression>
                        <terminal>[</terminal>
                      </bgf:expression>
                      <bgf:expression>
                        <terminal>]</terminal>
                      </bgf:expression>
                    </sequence>
                  </bgf:expression>
                </star>
              </bgf:expression>
            </marked>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <sequence>
                  <bgf:expression>
                    <terminal>throws</terminal>
                  </bgf:expression>
                  <bgf:expression>
                    <nonterminal>QualifiedIdentifierList</nonterminal>
                  </bgf:expression>
                </sequence>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <terminal>;</terminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:appear>
  <xbgf:fold>
    <nonterminal>BracketsOpt</nonterminal>
    <in>
      <nonterminal>VoidInterfaceMethodDeclaratorRest</nonterminal>
    </in>
  </xbgf:fold>

  <!-- ISSUE CORRECT SPECERROR
  undefined non-terminals -->
  <!-- GENERALITY -->
  <!-- INITCORR -->
  <xbgf:define>
    <bgf:production>
      <nonterminal>ExpressionStatement</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>StatementExpression</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <terminal>;</terminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:define>

  <!-- ISSUE CORRECT SPECERROR unused non-terminal -->
  <xbgf:eliminate>ArgumentsOpt</xbgf:eliminate>
  <!-- ISSUE CORRECT SPECERROR unused non-terminal -->
  <xbgf:eliminate>VoidMethodDeclaratorRest</xbgf:eliminate>
  <!-- ISSUE CORRECT SPECERROR unused non-terminal -->
  <xbgf:eliminate>VariableDeclaratorsRest</xbgf:eliminate>

  <!--   undefine lexical term -->
  <!-- GENERALITY -->
  <!-- RELAXATION -->
  <xbgf:undefine>Identifier</xbgf:undefine>

  <!-- ISSUE CORRECT SPECERROR
  Real error in JLS2:
   - Fail: Expression2Rest.
      - [], ;([,([t(instanceof), n(Type)]), *(,([n(InfixOp), n(Expression3)]))])
     vs.
      - [], ;([*(,([n(InfixOp), n(Expression3)])), ,([n(Expression3), t(instanceof), n(Type)])])
  -->
  <!-- KNOWNBUG -->
  <xbgf:project>
    <bgf:production>
      <nonterminal>Expression2Rest</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <marked>
              <bgf:expression>
                <nonterminal>Expression3</nonterminal>
              </bgf:expression>
            </marked>
          </bgf:expression>
          <bgf:expression>
            <terminal>instanceof</terminal>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>Type</nonterminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:project>
</xbgf:sequence>