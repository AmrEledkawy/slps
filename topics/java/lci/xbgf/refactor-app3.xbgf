<xbgf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf">

  <!-- getting the choices right -->
  <xbgf:vertical>
    <nonterminal>Primary</nonterminal>
  </xbgf:vertical>
  <xbgf:vertical>
    <nonterminal>IdentifierSuffix</nonterminal>
  </xbgf:vertical>
  <xbgf:vertical>
    <nonterminal>Expression3</nonterminal>
  </xbgf:vertical>

  <!-- 
   - Fail: Annotations.
      - [], ,([n(Annotation), ?(n(Annotations))])
     vs.
      - [], ;([n(Annotation), ,([n(Annotations), n(Annotation)])])
      
  Later this should become just deyaccify
  -->
  <xbgf:deyaccify>Annotations</xbgf:deyaccify>

  <!-- 
   - Fail: Catches.
      - [], ,([n(CatchClause), *(n(CatchClause))])
     vs.
      - [], +n(CatchClause)
  -->
  <xbgf:massage>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <nonterminal>CatchClause</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <star>
            <bgf:expression>
              <nonterminal>CatchClause</nonterminal>
            </bgf:expression>
          </star>
        </bgf:expression>
      </sequence>
    </bgf:expression>
    <bgf:expression>
      <plus>
        <bgf:expression>
          <nonterminal>CatchClause</nonterminal>
        </bgf:expression>
      </plus>
    </bgf:expression>
  </xbgf:massage>

  <!--  This stuff was used in JLS1 and JLS2 -->
  <xbgf:extract>
    <bgf:production>
      <nonterminal>BracketsOpt</nonterminal>
      <bgf:expression>
        <star>
          <bgf:expression>
            <sequence>
              <bgf:expression>
                <terminal>[</terminal>
              </bgf:expression>
              <bgf:expression>
                <terminal>]</terminal>
              </bgf:expression>
            </sequence>
          </bgf:expression>
        </star>
      </bgf:expression>
    </bgf:production>
  </xbgf:extract>

  <!--  
  ','([n('Primary'), *(n('Selector')), *(n('PostfixOp'))])
  vs 
  ;([n('Primary'), n('QualifiedIdentifier'), ','([n('PostfixExpression'), n('PostfixOp')])])
  -->
  <!-- BREFACTOR -->
  <xbgf:replace>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <nonterminal>Primary</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <star>
            <bgf:expression>
              <nonterminal>Selector</nonterminal>
            </bgf:expression>
          </star>
        </bgf:expression>
      </sequence>
    </bgf:expression>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <nonterminal>Primary</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <nonterminal>QualifiedIdentifier</nonterminal>
        </bgf:expression>
      </choice>
    </bgf:expression>
  </xbgf:replace>
  <xbgf:eliminate>Selector</xbgf:eliminate>
  
  <!-- Making new nonterminal -->
  <xbgf:extract>
    <bgf:production>
      <nonterminal>ModifiersOpt</nonterminal>
      <bgf:expression>
        <star>
          <bgf:expression>
            <nonterminal>Modifier</nonterminal>
          </bgf:expression>
        </star>
      </bgf:expression>
    </bgf:production>
  </xbgf:extract>
  
  <!-- we don't need minimised lookahead here -->
  <xbgf:inline>InterfaceMemberDecl</xbgf:inline>
  <xbgf:inline>InterfaceMethodOrFieldDecl</xbgf:inline>
  <xbgf:inline>InterfaceMethodOrFieldRest</xbgf:inline>
  <xbgf:inline>InterfaceGenericMethodDecl</xbgf:inline>
  <xbgf:inline>InterfaceMethodDeclaratorRest</xbgf:inline>
  <xbgf:inline>VoidInterfaceMethodDeclaratorRest</xbgf:inline>
  <xbgf:inline>ConstantDeclaratorsRest</xbgf:inline>
  <xbgf:inline>FormalParameters</xbgf:inline>
  <xbgf:distribute>
    <nonterminal>InterfaceBodyDeclaration</nonterminal>
  </xbgf:distribute>
<!--remove when done-->
  <xbgf:vertical>
    <nonterminal>InterfaceBodyDeclaration</nonterminal>
  </xbgf:vertical>
</xbgf:sequence>
