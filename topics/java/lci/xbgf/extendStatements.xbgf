<xbgf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf">

  <!-- 
   - Fail: Statement.
      - [], ,([t(for), t((), ?(n(ForInit)), t((;)), ?(n(Expression)), t((;)), ?(n(ForUpdate)), t()), n(Statement)])
      - [], ,([t(try), n(Block), ?(n(Catches)), t(finally), n(Block)])
      - [], ,([t(try), n(Block), n(Catches)])
      - [], n(ExpressionStatement)
     vs.
      - [], ,([n(StatementExpression), t((;))])
      - [], ,([t(try), n(Block), ;([n(Catches), ,([?(n(Catches)), t(finally), n(Block)])])])
      - [], ,([t(for), t((), n(ForControl), t()), n(Statement)])
      - [], ,([t(assert), n(Expression), ?(,([t(:), n(Expression)])), t((;))])
  -->

  <!-- 
   - Fail: Statement.
      - [], n(ExpressionStatement)
     vs.
      - [], ,([n(StatementExpression), t((;))])
  -->

  <xbgf:inline>ExpressionStatement</xbgf:inline>


  <!-- ISSUE EXTEND 
   - Fail: Statement.
      - [], ,([t(for), t((), ?(n(ForInit)), t((;)), ?(n(Expression)), t((;)), ?(n(ForUpdate)), t()), n(Statement)])
     vs.
      - [], ,([t(for), t((), n(ForControl), t()), n(Statement)])
   - Fail: ForControl.
      - [], ,([?(n(ForInit)), t((;)), ?(n(Expression)), t((;)), ?(n(ForUpdate))])
     vs.
      - [], ,([n(ForInit), t((;)), ?(n(Expression)), t((;)), ?(n(ForUpdate))])
      - [], n(ForVarControl)
  -->
  <xbgf:extract>
    <bgf:production>
      <nonterminal>ForControl</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <nonterminal>ForInit</nonterminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <terminal>;</terminal>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <nonterminal>Expression</nonterminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <terminal>;</terminal>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <nonterminal>ForUpdate</nonterminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:extract>
  <xbgf:narrow>
    <bgf:expression>
      <optional>
        <bgf:expression>
          <nonterminal>ForInit</nonterminal>
        </bgf:expression>
      </optional>
    </bgf:expression>
    <bgf:expression>
      <nonterminal>ForInit</nonterminal>
    </bgf:expression>
  </xbgf:narrow>
  <xbgf:introduce>
    <bgf:production>
      <nonterminal>VariableDeclaratorsRest</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>VariableDeclaratorRest</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <star>
              <bgf:expression>
                <sequence>
                  <bgf:expression>
                    <terminal>,</terminal>
                  </bgf:expression>
                  <bgf:expression>
                    <nonterminal>VariableDeclarator</nonterminal>
                  </bgf:expression>
                </sequence>
              </bgf:expression>
            </star>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:introduce>
  <xbgf:introduce>
    <bgf:production>
      <nonterminal>ForVarControlRest</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <nonterminal>VariableDeclaratorsRest</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <terminal>;</terminal>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <nonterminal>Expression</nonterminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <terminal>;</terminal>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <nonterminal>ForUpdate</nonterminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
    <bgf:production>
      <nonterminal>ForVarControlRest</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <terminal>:</terminal>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>Expression</nonterminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:introduce>
  <xbgf:introduce>
    <bgf:production>
      <nonterminal>ForVarControl</nonterminal>
      <bgf:expression>
        <sequence>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <terminal>final</terminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <optional>
              <bgf:expression>
                <nonterminal>Annotations</nonterminal>
              </bgf:expression>
            </optional>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>Type</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>Identifier</nonterminal>
          </bgf:expression>
          <bgf:expression>
            <nonterminal>ForVarControlRest</nonterminal>
          </bgf:expression>
        </sequence>
      </bgf:expression>
    </bgf:production>
  </xbgf:introduce>
  <xbgf:add>
    <vertical>
      <bgf:production>
        <nonterminal>ForControl</nonterminal>
        <bgf:expression>
          <nonterminal>ForVarControl</nonterminal>
        </bgf:expression>
      </bgf:production>
    </vertical>
  </xbgf:add>

  <!-- ISSUE EXTEND
   - Fail: Statement.
      - [], ,([t(try), n(Block), ?(n(Catches)), t(finally), n(Block)])
      - [], ,([t(try), n(Block), n(Catches)])
     vs.
      - [], ,([t(try), n(Block), ;([n(Catches), ,([?(n(Catches)), t(finally), n(Block)])])])
  -->
  <xbgf:horizontal>Statement</xbgf:horizontal>
  <xbgf:factor>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>try</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Block</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Catches</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>try</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Block</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <sequence>
                <bgf:expression>
                  <optional>
                    <bgf:expression>
                      <nonterminal>Catches</nonterminal>
                    </bgf:expression>
                  </optional>
                </bgf:expression>
                <bgf:expression>
                  <terminal>finally</terminal>
                </bgf:expression>
                <bgf:expression>
                  <nonterminal>Block</nonterminal>
                </bgf:expression>
              </sequence>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>try</terminal>
        </bgf:expression>
        <bgf:expression>
          <nonterminal>Block</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <choice>
            <bgf:expression>
              <nonterminal>Catches</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <sequence>
                <bgf:expression>
                  <optional>
                    <bgf:expression>
                      <nonterminal>Catches</nonterminal>
                    </bgf:expression>
                  </optional>
                </bgf:expression>
                <bgf:expression>
                  <terminal>finally</terminal>
                </bgf:expression>
                <bgf:expression>
                  <nonterminal>Block</nonterminal>
                </bgf:expression>
              </sequence>
            </bgf:expression>
          </choice>
        </bgf:expression>
      </sequence>
    </bgf:expression>
  </xbgf:factor>
  <xbgf:vertical>
    <nonterminal>Statement</nonterminal>
  </xbgf:vertical>

  <!-- ISSUE EXTEND
   - Fail: Statement.
     vs.
      - [], ,([t(assert), n(Expression), ?(,([t(:), n(Expression)])), t((;))])
  -->
  <xbgf:add>
    <vertical>
      <bgf:production>
        <nonterminal>Statement</nonterminal>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>assert</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Expression</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <optional>
                <bgf:expression>
                  <sequence>
                    <bgf:expression>
                      <terminal>:</terminal>
                    </bgf:expression>
                    <bgf:expression>
                      <nonterminal>Expression</nonterminal>
                    </bgf:expression>
                  </sequence>
                </bgf:expression>
              </optional>
            </bgf:expression>
            <bgf:expression>
              <terminal>;</terminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </bgf:production>
    </vertical>
  </xbgf:add>
</xbgf:sequence>