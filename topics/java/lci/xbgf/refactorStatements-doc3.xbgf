<xbgf:sequence
  xmlns:bgf="http://planet-sl.org/bgf"
  xmlns:xbgf="http://planet-sl.org/xbgf">
  
  <xbgf:horizontal>AssertStatement</xbgf:horizontal>
  <xbgf:inline>AssertStatement</xbgf:inline>
  <xbgf:inline>BasicForStatement</xbgf:inline>
  <xbgf:inline>EnhancedForStatement</xbgf:inline>
  <xbgf:inline>ExpressionStatement</xbgf:inline>

  <!--
     - Fail: Statement.
              ,([t(assert), n(Expression), ?(,([t(:), n(Expression)])), t((;))]),
     vs.
               ;([,([t(assert), n(Expression), t((;))]),
                  ,([t(assert), n(Expression), t(:), n(Expression), t((;))])]),
-->
  <xbgf:horizontal>Statement</xbgf:horizontal>
  <xbgf:factor>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>assert</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Expression</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>;</terminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>assert</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Expression</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>:</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Expression</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>;</terminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>assert</terminal>
        </bgf:expression>
        <bgf:expression>
          <nonterminal>Expression</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <choice>
            <bgf:expression>
              <sequence>
                <bgf:expression>
                  <terminal>:</terminal>
                </bgf:expression>
                <bgf:expression>
                  <nonterminal>Expression</nonterminal>
                </bgf:expression>
              </sequence>
            </bgf:expression>
            <bgf:expression>
              <epsilon/>
            </bgf:expression>
          </choice>
        </bgf:expression>
        <bgf:expression>
          <terminal>;</terminal>
        </bgf:expression>
      </sequence>
    </bgf:expression>
  </xbgf:factor>
  <xbgf:massage>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>:</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Expression</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
        <bgf:expression>
          <epsilon/>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <bgf:expression>
      <optional>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>:</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Expression</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </optional>
    </bgf:expression>
  </xbgf:massage>

  <!--
     - Fail: Statement.
      - [], ;([
              ,([t(try), n(Block), ;([n(Catches), ,([?(n(Catches)), t(finally), n(Block)])])]),
     vs.
      - [], ;([
               ,([t(try), n(Block), n(Catches)]),
               ,([t(try), n(Block), ?(n(Catches)), t(finally), n(Block)]),
-->
  <xbgf:factor>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>try</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Block</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Catches</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>try</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Block</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <optional>
                <bgf:expression>
                  <nonterminal>Catches</nonterminal>
                </bgf:expression>
              </optional>
            </bgf:expression>
            <bgf:expression>
              <terminal>finally</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Block</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>try</terminal>
        </bgf:expression>
        <bgf:expression>
          <nonterminal>Block</nonterminal>
        </bgf:expression>
        <bgf:expression>
          <choice>
            <bgf:expression>
              <nonterminal>Catches</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <sequence>
                <bgf:expression>
                  <optional>
                    <bgf:expression>
                      <nonterminal>Catches</nonterminal>
                    </bgf:expression>
                  </optional>
                </bgf:expression>
                <bgf:expression>
                  <terminal>finally</terminal>
                </bgf:expression>
                <bgf:expression>
                  <nonterminal>Block</nonterminal>
                </bgf:expression>
              </sequence>
            </bgf:expression>
          </choice>
        </bgf:expression>
      </sequence>
    </bgf:expression>
  </xbgf:factor>

  <!--
     - Fail: Statement.
      - [], ;([
              ,([t(for), t((), n(ForControl), t()), n(Statement)]),
     vs.
      - [], ;([
               ,([t(for), t((), ?(n(ForInit)), t((;)), ?(n(Expression)), t((;)), ?(n(ForUpdate)), t()), n(Statement)]),
               ,([t(for), t((), ?(n(VariableModifiers)), n(Type), n(Identifier), t(:), n(Expression), t()), n(Statement)])])
-->
  <xbgf:factor>
    <bgf:expression>
      <choice>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>for</terminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>(</terminal>
            </bgf:expression>
            <bgf:expression>
              <optional>
                <bgf:expression>
                  <nonterminal>ForInit</nonterminal>
                </bgf:expression>
              </optional>
            </bgf:expression>
            <bgf:expression>
              <terminal>;</terminal>
            </bgf:expression>
            <bgf:expression>
              <optional>
                <bgf:expression>
                  <nonterminal>Expression</nonterminal>
                </bgf:expression>
              </optional>
            </bgf:expression>
            <bgf:expression>
              <terminal>;</terminal>
            </bgf:expression>
            <bgf:expression>
              <optional>
                <bgf:expression>
                  <nonterminal>ForUpdate</nonterminal>
                </bgf:expression>
              </optional>
            </bgf:expression>
            <bgf:expression>
              <terminal>)</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Statement</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
        <bgf:expression>
          <sequence>
            <bgf:expression>
              <terminal>for</terminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>(</terminal>
            </bgf:expression>
            <bgf:expression>
              <optional>
                <bgf:expression>
                  <nonterminal>VariableModifiers</nonterminal>
                </bgf:expression>
              </optional>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Type</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Identifier</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>:</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Expression</nonterminal>
            </bgf:expression>
            <bgf:expression>
              <terminal>)</terminal>
            </bgf:expression>
            <bgf:expression>
              <nonterminal>Statement</nonterminal>
            </bgf:expression>
          </sequence>
        </bgf:expression>
      </choice>
    </bgf:expression>
    <bgf:expression>
      <sequence>
        <bgf:expression>
          <terminal>for</terminal>
        </bgf:expression>
        <bgf:expression>
          <terminal>(</terminal>
        </bgf:expression>
        <bgf:expression>
          <choice>
            <bgf:expression>
              <sequence>
                <bgf:expression>
                  <optional>
                    <bgf:expression>
                      <nonterminal>ForInit</nonterminal>
                    </bgf:expression>
                  </optional>
                </bgf:expression>
                <bgf:expression>
                  <terminal>;</terminal>
                </bgf:expression>
                <bgf:expression>
                  <optional>
                    <bgf:expression>
                      <nonterminal>Expression</nonterminal>
                    </bgf:expression>
                  </optional>
                </bgf:expression>
                <bgf:expression>
                  <terminal>;</terminal>
                </bgf:expression>
                <bgf:expression>
                  <optional>
                    <bgf:expression>
                      <nonterminal>ForUpdate</nonterminal>
                    </bgf:expression>
                  </optional>
                </bgf:expression>
              </sequence>
            </bgf:expression>
            <bgf:expression>
              <sequence>
                <bgf:expression>
                  <optional>
                    <bgf:expression>
                      <nonterminal>VariableModifiers</nonterminal>
                    </bgf:expression>
                  </optional>
                </bgf:expression>
                <bgf:expression>
                  <nonterminal>Type</nonterminal>
                </bgf:expression>
                <bgf:expression>
                  <nonterminal>Identifier</nonterminal>
                </bgf:expression>
                <bgf:expression>
                  <terminal>:</terminal>
                </bgf:expression>
                <bgf:expression>
                  <nonterminal>Expression</nonterminal>
                </bgf:expression>
              </sequence>
            </bgf:expression>
          </choice>
        </bgf:expression>
        <bgf:expression>
          <terminal>)</terminal>
        </bgf:expression>
        <bgf:expression>
          <nonterminal>Statement</nonterminal>
        </bgf:expression>
      </sequence>
    </bgf:expression>
  </xbgf:factor>
  <xbgf:extract>
    <bgf:production>
      <nonterminal>ForControl</nonterminal>
      <bgf:expression>
        <choice>
          <bgf:expression>
            <sequence>
              <bgf:expression>
                <optional>
                  <bgf:expression>
                    <nonterminal>ForInit</nonterminal>
                  </bgf:expression>
                </optional>
              </bgf:expression>
              <bgf:expression>
                <terminal>;</terminal>
              </bgf:expression>
              <bgf:expression>
                <optional>
                  <bgf:expression>
                    <nonterminal>Expression</nonterminal>
                  </bgf:expression>
                </optional>
              </bgf:expression>
              <bgf:expression>
                <terminal>;</terminal>
              </bgf:expression>
              <bgf:expression>
                <optional>
                  <bgf:expression>
                    <nonterminal>ForUpdate</nonterminal>
                  </bgf:expression>
                </optional>
              </bgf:expression>
            </sequence>
          </bgf:expression>
          <bgf:expression>
            <sequence>
              <bgf:expression>
                <optional>
                  <bgf:expression>
                    <nonterminal>VariableModifiers</nonterminal>
                  </bgf:expression>
                </optional>
              </bgf:expression>
              <bgf:expression>
                <nonterminal>Type</nonterminal>
              </bgf:expression>
              <bgf:expression>
                <nonterminal>Identifier</nonterminal>
              </bgf:expression>
              <bgf:expression>
                <terminal>:</terminal>
              </bgf:expression>
              <bgf:expression>
                <nonterminal>Expression</nonterminal>
              </bgf:expression>
            </sequence>
          </bgf:expression>
        </choice>
      </bgf:expression>
    </bgf:production>
  </xbgf:extract>
  <xbgf:vertical>
    <nonterminal>ForControl</nonterminal>
  </xbgf:vertical>

  <xbgf:vertical>
    <nonterminal>Statement</nonterminal>
  </xbgf:vertical>
</xbgf:sequence>